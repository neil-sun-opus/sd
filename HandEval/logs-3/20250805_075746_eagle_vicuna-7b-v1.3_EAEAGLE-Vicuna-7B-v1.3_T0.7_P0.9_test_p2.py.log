LlamaForCausalLM has generative capabilities, as `prepare_inputs_for_generation` is explicitly overwritten. However, it doesn't directly inherit from `GenerationMixin`. From 👉v4.50👈 onwards, `PreTrainedModel` will NOT inherit from `GenerationMixin`, and this model will lose the ability to call `generate` and other related functions.
  - If you're using `trust_remote_code=True`, you can get rid of this warning by loading the model with an auto class. See https://huggingface.co/docs/transformers/en/model_doc/auto#auto-classes
  - If you are the owner of the model architecture code, please modify your model class such that it inherits from `GenerationMixin` (after `PreTrainedModel`, otherwise you'll get an exception).
  - If you are not the owner of the model architecture class, please contact the model code owner to update it.
Loading EAGLE model from ../model_ckpt/EAGLE-Vicuna-7B-v1.3 with dtype float16
Base model: ../model_ckpt/vicuna-7b-v1.3
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:01<00:01,  1.59s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:02<00:00,  1.01s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:02<00:00,  1.10s/it]
/home/ubuntu/sd/EAGLE/eagle/model/ea_model.py:123: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  ea_layer_state_dict = torch.load(load_model_path,
You are using the default legacy behaviour of the <class 'transformers.models.llama.tokenization_llama.LlamaTokenizer'>. This is expected, and simply means that the `legacy` (previous) behavior will be used so nothing changes for you. If you want to use the new behaviour, set `legacy=False`. This should only be set if you understand what it means, and thoroughly read the reason why this was added as explained in https://github.com/huggingface/transformers/pull/24565 - if you loaded a llama tokenizer from a GGUF file you can ignore this message
/home/ubuntu/sd/EAGLE/eagle/model/cnets1.py:510: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  weights = torch.load(local_emb_path)
Dataset: data-is-better-together/10k_prompts_ranked:   0%|          | 0/200 [00:00<?, ?it/s]/home/ubuntu/miniconda3/envs/sd/lib/python3.10/site-packages/torch/_dynamo/eval_frame.py:632: UserWarning: torch.utils.checkpoint: the use_reentrant parameter should be passed explicitly. In version 2.5 we will raise an exception if use_reentrant is not passed. use_reentrant=False is recommended, but if you need to preserve the current default behavior, you can pass use_reentrant=True. Refer to docs for more details on the differences between the two variants.
  return fn(*args, **kwargs)
/home/ubuntu/miniconda3/envs/sd/lib/python3.10/site-packages/torch/utils/checkpoint.py:87: UserWarning: None of the inputs have requires_grad=True. Gradients will be None
  warnings.warn(
Dataset: data-is-better-together/10k_prompts_ranked:   0%|          | 1/200 [00:02<07:25,  2.24s/it]Dataset: data-is-better-together/10k_prompts_ranked:   1%|          | 2/200 [00:04<06:47,  2.06s/it]Dataset: data-is-better-together/10k_prompts_ranked:   2%|▏         | 3/200 [00:05<04:55,  1.50s/it]Dataset: data-is-better-together/10k_prompts_ranked:   2%|▏         | 4/200 [00:06<05:21,  1.64s/it]Dataset: data-is-better-together/10k_prompts_ranked:   2%|▎         | 5/200 [00:08<05:13,  1.61s/it]Dataset: data-is-better-together/10k_prompts_ranked:   3%|▎         | 6/200 [00:10<05:30,  1.71s/it]Dataset: data-is-better-together/10k_prompts_ranked:   4%|▎         | 7/200 [00:11<05:01,  1.56s/it]Dataset: data-is-better-together/10k_prompts_ranked:   4%|▍         | 8/200 [00:11<03:50,  1.20s/it]Dataset: data-is-better-together/10k_prompts_ranked:   4%|▍         | 9/200 [00:13<04:05,  1.28s/it]Dataset: data-is-better-together/10k_prompts_ranked:   5%|▌         | 10/200 [00:14<03:55,  1.24s/it]Dataset: data-is-better-together/10k_prompts_ranked:   6%|▌         | 11/200 [00:16<04:32,  1.44s/it]Dataset: data-is-better-together/10k_prompts_ranked:   6%|▌         | 12/200 [00:16<03:35,  1.15s/it]Dataset: data-is-better-together/10k_prompts_ranked:   6%|▋         | 13/200 [00:17<03:13,  1.04s/it]Dataset: data-is-better-together/10k_prompts_ranked:   7%|▋         | 14/200 [00:19<03:40,  1.18s/it]Dataset: data-is-better-together/10k_prompts_ranked:   8%|▊         | 15/200 [00:20<03:54,  1.27s/it]Dataset: data-is-better-together/10k_prompts_ranked:   8%|▊         | 16/200 [00:22<04:37,  1.51s/it]Dataset: data-is-better-together/10k_prompts_ranked:   8%|▊         | 17/200 [00:24<04:50,  1.59s/it]Dataset: data-is-better-together/10k_prompts_ranked:   9%|▉         | 18/200 [00:25<03:59,  1.32s/it]Dataset: data-is-better-together/10k_prompts_ranked:  10%|▉         | 19/200 [00:26<04:15,  1.41s/it]Dataset: data-is-better-together/10k_prompts_ranked:  10%|█         | 20/200 [00:27<03:34,  1.19s/it]Dataset: data-is-better-together/10k_prompts_ranked:  10%|█         | 21/200 [00:28<03:29,  1.17s/it]Dataset: data-is-better-together/10k_prompts_ranked:  11%|█         | 22/200 [00:29<03:11,  1.08s/it]Dataset: data-is-better-together/10k_prompts_ranked:  12%|█▏        | 23/200 [00:31<03:38,  1.24s/it]Dataset: data-is-better-together/10k_prompts_ranked:  12%|█▏        | 24/200 [00:33<04:12,  1.44s/it]Dataset: data-is-better-together/10k_prompts_ranked:  12%|█▎        | 25/200 [00:34<04:22,  1.50s/it]Dataset: data-is-better-together/10k_prompts_ranked:  13%|█▎        | 26/200 [00:36<04:20,  1.49s/it]Dataset: data-is-better-together/10k_prompts_ranked:  14%|█▎        | 27/200 [00:37<04:15,  1.48s/it]Dataset: data-is-better-together/10k_prompts_ranked:  14%|█▍        | 28/200 [00:39<04:26,  1.55s/it]Dataset: data-is-better-together/10k_prompts_ranked:  14%|█▍        | 29/200 [00:41<04:39,  1.63s/it]Dataset: data-is-better-together/10k_prompts_ranked:  15%|█▌        | 30/200 [00:42<04:05,  1.44s/it]Dataset: data-is-better-together/10k_prompts_ranked:  16%|█▌        | 31/200 [00:43<04:11,  1.49s/it]Dataset: data-is-better-together/10k_prompts_ranked:  16%|█▌        | 32/200 [00:46<04:53,  1.74s/it]Dataset: data-is-better-together/10k_prompts_ranked:  16%|█▋        | 33/200 [00:47<04:48,  1.73s/it]Dataset: data-is-better-together/10k_prompts_ranked:  17%|█▋        | 34/200 [00:49<04:31,  1.63s/it]Dataset: data-is-better-together/10k_prompts_ranked:  18%|█▊        | 35/200 [00:50<04:23,  1.60s/it]Dataset: data-is-better-together/10k_prompts_ranked:  18%|█▊        | 36/200 [00:52<04:25,  1.62s/it]Dataset: data-is-better-together/10k_prompts_ranked:  18%|█▊        | 37/200 [00:53<04:18,  1.58s/it]Dataset: data-is-better-together/10k_prompts_ranked:  19%|█▉        | 38/200 [00:55<03:59,  1.48s/it]Dataset: data-is-better-together/10k_prompts_ranked:  20%|█▉        | 39/200 [00:56<04:08,  1.54s/it]Dataset: data-is-better-together/10k_prompts_ranked:  20%|██        | 40/200 [00:58<04:09,  1.56s/it]Dataset: data-is-better-together/10k_prompts_ranked:  20%|██        | 41/200 [00:59<03:29,  1.31s/it]Dataset: data-is-better-together/10k_prompts_ranked:  21%|██        | 42/200 [01:01<03:56,  1.50s/it]Dataset: data-is-better-together/10k_prompts_ranked:  22%|██▏       | 43/200 [01:03<04:29,  1.72s/it]Dataset: data-is-better-together/10k_prompts_ranked:  22%|██▏       | 44/200 [01:05<04:51,  1.87s/it]Dataset: data-is-better-together/10k_prompts_ranked:  22%|██▎       | 45/200 [01:07<04:32,  1.76s/it]Dataset: data-is-better-together/10k_prompts_ranked:  23%|██▎       | 46/200 [01:07<03:28,  1.36s/it]Dataset: data-is-better-together/10k_prompts_ranked:  24%|██▎       | 47/200 [01:08<02:50,  1.11s/it]Dataset: data-is-better-together/10k_prompts_ranked:  24%|██▍       | 48/200 [01:08<02:10,  1.16it/s]Dataset: data-is-better-together/10k_prompts_ranked:  24%|██▍       | 49/200 [01:09<02:39,  1.06s/it]Dataset: data-is-better-together/10k_prompts_ranked:  25%|██▌       | 50/200 [01:11<03:00,  1.20s/it]Dataset: data-is-better-together/10k_prompts_ranked:  26%|██▌       | 51/200 [01:13<03:29,  1.40s/it]Dataset: data-is-better-together/10k_prompts_ranked:  26%|██▌       | 52/200 [01:14<03:21,  1.36s/it]Dataset: data-is-better-together/10k_prompts_ranked:  26%|██▋       | 53/200 [01:15<03:25,  1.40s/it]Dataset: data-is-better-together/10k_prompts_ranked:  27%|██▋       | 54/200 [01:16<02:46,  1.14s/it]Dataset: data-is-better-together/10k_prompts_ranked:  28%|██▊       | 55/200 [01:17<02:29,  1.03s/it]Dataset: data-is-better-together/10k_prompts_ranked:  28%|██▊       | 56/200 [01:18<02:19,  1.03it/s]Dataset: data-is-better-together/10k_prompts_ranked:  28%|██▊       | 57/200 [01:19<02:47,  1.17s/it]Dataset: data-is-better-together/10k_prompts_ranked:  30%|██▉       | 59/200 [01:21<02:13,  1.05it/s]Dataset: data-is-better-together/10k_prompts_ranked:  30%|███       | 60/200 [01:22<02:38,  1.13s/it]Dataset: data-is-better-together/10k_prompts_ranked:  30%|███       | 61/200 [01:23<02:11,  1.06it/s]Dataset: data-is-better-together/10k_prompts_ranked:  31%|███       | 62/200 [01:25<02:55,  1.27s/it]Dataset: data-is-better-together/10k_prompts_ranked:  32%|███▏      | 63/200 [01:27<03:23,  1.49s/it]Dataset: data-is-better-together/10k_prompts_ranked:  32%|███▏      | 64/200 [01:28<02:52,  1.27s/it]Dataset: data-is-better-together/10k_prompts_ranked:  32%|███▎      | 65/200 [01:30<03:25,  1.52s/it]Dataset: data-is-better-together/10k_prompts_ranked:  33%|███▎      | 66/200 [01:31<03:24,  1.53s/it]Dataset: data-is-better-together/10k_prompts_ranked:  34%|███▎      | 67/200 [01:33<03:28,  1.57s/it]Dataset: data-is-better-together/10k_prompts_ranked:  34%|███▍      | 68/200 [01:34<03:18,  1.50s/it]Dataset: data-is-better-together/10k_prompts_ranked:  34%|███▍      | 69/200 [01:35<02:30,  1.15s/it]Dataset: data-is-better-together/10k_prompts_ranked:  35%|███▌      | 70/200 [01:35<01:53,  1.15it/s]Dataset: data-is-better-together/10k_prompts_ranked:  36%|███▌      | 71/200 [01:36<01:51,  1.16it/s]Dataset: data-is-better-together/10k_prompts_ranked:  36%|███▌      | 72/200 [01:38<02:27,  1.16s/it]Dataset: data-is-better-together/10k_prompts_ranked:  36%|███▋      | 73/200 [01:39<02:55,  1.38s/it]Dataset: data-is-better-together/10k_prompts_ranked:  37%|███▋      | 74/200 [01:40<02:28,  1.18s/it]Dataset: data-is-better-together/10k_prompts_ranked:  38%|███▊      | 75/200 [01:42<02:43,  1.31s/it]Dataset: data-is-better-together/10k_prompts_ranked:  38%|███▊      | 76/200 [01:44<03:14,  1.56s/it]Dataset: data-is-better-together/10k_prompts_ranked:  38%|███▊      | 77/200 [01:45<03:06,  1.51s/it]Dataset: data-is-better-together/10k_prompts_ranked:  39%|███▉      | 78/200 [01:46<02:17,  1.12s/it]Dataset: data-is-better-together/10k_prompts_ranked:  40%|███▉      | 79/200 [01:47<02:44,  1.36s/it]Dataset: data-is-better-together/10k_prompts_ranked:  40%|████      | 80/200 [01:49<02:53,  1.44s/it]Dataset: data-is-better-together/10k_prompts_ranked:  40%|████      | 81/200 [01:51<03:03,  1.54s/it]Dataset: data-is-better-together/10k_prompts_ranked:  41%|████      | 82/200 [01:51<02:20,  1.19s/it]Dataset: data-is-better-together/10k_prompts_ranked:  42%|████▏     | 83/200 [01:52<02:13,  1.14s/it]Dataset: data-is-better-together/10k_prompts_ranked:  42%|████▏     | 84/200 [01:54<02:46,  1.44s/it]Dataset: data-is-better-together/10k_prompts_ranked:  42%|████▎     | 85/200 [01:56<02:47,  1.46s/it]Dataset: data-is-better-together/10k_prompts_ranked:  43%|████▎     | 86/200 [01:57<02:41,  1.42s/it]Dataset: data-is-better-together/10k_prompts_ranked:  44%|████▎     | 87/200 [01:59<03:00,  1.60s/it]Dataset: data-is-better-together/10k_prompts_ranked:  44%|████▍     | 88/200 [02:01<02:59,  1.60s/it]Dataset: data-is-better-together/10k_prompts_ranked:  44%|████▍     | 89/200 [02:03<03:01,  1.63s/it]Dataset: data-is-better-together/10k_prompts_ranked:  45%|████▌     | 90/200 [02:04<02:56,  1.61s/it]Dataset: data-is-better-together/10k_prompts_ranked:  46%|████▌     | 91/200 [02:05<02:26,  1.34s/it]Dataset: data-is-better-together/10k_prompts_ranked:  46%|████▌     | 92/200 [02:06<02:35,  1.44s/it]Dataset: data-is-better-together/10k_prompts_ranked:  46%|████▋     | 93/200 [02:08<02:51,  1.60s/it]Dataset: data-is-better-together/10k_prompts_ranked:  47%|████▋     | 94/200 [02:09<02:25,  1.37s/it]Dataset: data-is-better-together/10k_prompts_ranked:  48%|████▊     | 95/200 [02:11<02:32,  1.45s/it]Dataset: data-is-better-together/10k_prompts_ranked:  48%|████▊     | 96/200 [02:13<02:54,  1.67s/it]Dataset: data-is-better-together/10k_prompts_ranked:  48%|████▊     | 97/200 [02:15<02:55,  1.70s/it]Dataset: data-is-better-together/10k_prompts_ranked:  49%|████▉     | 98/200 [02:17<02:58,  1.75s/it]Dataset: data-is-better-together/10k_prompts_ranked:  50%|████▉     | 99/200 [02:19<03:13,  1.92s/it]Dataset: data-is-better-together/10k_prompts_ranked:  50%|█████     | 101/200 [02:21<02:19,  1.41s/it]Dataset: data-is-better-together/10k_prompts_ranked:  51%|█████     | 102/200 [02:23<02:27,  1.51s/it]Dataset: data-is-better-together/10k_prompts_ranked:  52%|█████▏    | 103/200 [02:24<02:20,  1.45s/it]Dataset: data-is-better-together/10k_prompts_ranked:  52%|█████▏    | 104/200 [02:25<02:19,  1.45s/it]Token indices sequence length is longer than the specified maximum sequence length for this model (3654 > 2048). Running this sequence through the model will result in indexing errors
Dataset: data-is-better-together/10k_prompts_ranked:  52%|█████▎    | 105/200 [02:27<02:24,  1.52s/it]Dataset: data-is-better-together/10k_prompts_ranked:  53%|█████▎    | 106/200 [02:28<02:16,  1.45s/it]Dataset: data-is-better-together/10k_prompts_ranked:  54%|█████▎    | 107/200 [02:30<02:21,  1.53s/it]Dataset: data-is-better-together/10k_prompts_ranked:  54%|█████▍    | 108/200 [02:32<02:31,  1.65s/it]Dataset: data-is-better-together/10k_prompts_ranked:  55%|█████▍    | 109/200 [02:32<02:02,  1.34s/it]Dataset: data-is-better-together/10k_prompts_ranked:  55%|█████▌    | 110/200 [02:35<02:23,  1.59s/it]Dataset: data-is-better-together/10k_prompts_ranked:  56%|█████▌    | 111/200 [02:36<02:23,  1.61s/it]Dataset: data-is-better-together/10k_prompts_ranked:  56%|█████▌    | 112/200 [02:38<02:15,  1.54s/it]Dataset: data-is-better-together/10k_prompts_ranked:  56%|█████▋    | 113/200 [02:40<02:32,  1.75s/it]Dataset: data-is-better-together/10k_prompts_ranked:  57%|█████▋    | 114/200 [02:41<02:02,  1.43s/it]Dataset: data-is-better-together/10k_prompts_ranked:  57%|█████▊    | 115/200 [02:41<01:39,  1.17s/it]Dataset: data-is-better-together/10k_prompts_ranked:  58%|█████▊    | 116/200 [02:41<01:13,  1.15it/s]Dataset: data-is-better-together/10k_prompts_ranked:  58%|█████▊    | 117/200 [02:42<01:05,  1.27it/s]Dataset: data-is-better-together/10k_prompts_ranked:  59%|█████▉    | 118/200 [02:44<01:24,  1.03s/it]Dataset: data-is-better-together/10k_prompts_ranked:  60%|█████▉    | 119/200 [02:45<01:27,  1.08s/it]Dataset: data-is-better-together/10k_prompts_ranked:  60%|██████    | 120/200 [02:46<01:40,  1.26s/it]Dataset: data-is-better-together/10k_prompts_ranked:  60%|██████    | 121/200 [02:48<01:45,  1.33s/it]Dataset: data-is-better-together/10k_prompts_ranked:  61%|██████    | 122/200 [02:49<01:47,  1.38s/it]Dataset: data-is-better-together/10k_prompts_ranked:  62%|██████▏   | 123/200 [02:51<01:52,  1.47s/it]Dataset: data-is-better-together/10k_prompts_ranked:  62%|██████▏   | 124/200 [02:53<02:08,  1.69s/it]Dataset: data-is-better-together/10k_prompts_ranked:  62%|██████▎   | 125/200 [02:54<01:35,  1.27s/it]Dataset: data-is-better-together/10k_prompts_ranked:  63%|██████▎   | 126/200 [02:55<01:39,  1.35s/it]Dataset: data-is-better-together/10k_prompts_ranked:  64%|██████▎   | 127/200 [02:57<01:46,  1.46s/it]Dataset: data-is-better-together/10k_prompts_ranked:  64%|██████▍   | 128/200 [02:57<01:26,  1.20s/it]Dataset: data-is-better-together/10k_prompts_ranked:  64%|██████▍   | 129/200 [02:59<01:37,  1.38s/it]Dataset: data-is-better-together/10k_prompts_ranked:  65%|██████▌   | 130/200 [03:01<01:45,  1.51s/it]Dataset: data-is-better-together/10k_prompts_ranked:  66%|██████▌   | 131/200 [03:03<01:47,  1.56s/it]Dataset: data-is-better-together/10k_prompts_ranked:  66%|██████▌   | 132/200 [03:04<01:49,  1.61s/it]Dataset: data-is-better-together/10k_prompts_ranked:  66%|██████▋   | 133/200 [03:05<01:33,  1.39s/it]Dataset: data-is-better-together/10k_prompts_ranked:  67%|██████▋   | 134/200 [03:06<01:08,  1.04s/it]Dataset: data-is-better-together/10k_prompts_ranked:  68%|██████▊   | 135/200 [03:06<00:54,  1.19it/s]Dataset: data-is-better-together/10k_prompts_ranked:  68%|██████▊   | 136/200 [03:06<00:42,  1.51it/s]Dataset: data-is-better-together/10k_prompts_ranked:  68%|██████▊   | 137/200 [03:07<00:42,  1.50it/s]Dataset: data-is-better-together/10k_prompts_ranked:  69%|██████▉   | 138/200 [03:09<01:01,  1.01it/s]Dataset: data-is-better-together/10k_prompts_ranked:  70%|██████▉   | 139/200 [03:11<01:19,  1.30s/it]Dataset: data-is-better-together/10k_prompts_ranked:  70%|███████   | 140/200 [03:12<01:28,  1.47s/it]Dataset: data-is-better-together/10k_prompts_ranked:  70%|███████   | 141/200 [03:14<01:26,  1.46s/it]Dataset: data-is-better-together/10k_prompts_ranked:  71%|███████   | 142/200 [03:15<01:20,  1.39s/it]Dataset: data-is-better-together/10k_prompts_ranked:  72%|███████▏  | 143/200 [03:16<01:08,  1.20s/it]Dataset: data-is-better-together/10k_prompts_ranked:  72%|███████▏  | 144/200 [03:16<00:51,  1.09it/s]Dataset: data-is-better-together/10k_prompts_ranked:  72%|███████▎  | 145/200 [03:18<01:02,  1.13s/it]Dataset: data-is-better-together/10k_prompts_ranked:  73%|███████▎  | 146/200 [03:18<00:46,  1.17it/s]Dataset: data-is-better-together/10k_prompts_ranked:  74%|███████▎  | 147/200 [03:19<00:55,  1.04s/it]Dataset: data-is-better-together/10k_prompts_ranked:  74%|███████▍  | 148/200 [03:21<01:00,  1.17s/it]Dataset: data-is-better-together/10k_prompts_ranked:  74%|███████▍  | 149/200 [03:22<01:04,  1.27s/it]Dataset: data-is-better-together/10k_prompts_ranked:  75%|███████▌  | 150/200 [03:24<01:11,  1.44s/it]Dataset: data-is-better-together/10k_prompts_ranked:  76%|███████▌  | 151/200 [03:26<01:14,  1.53s/it]Dataset: data-is-better-together/10k_prompts_ranked:  76%|███████▌  | 152/200 [03:27<01:11,  1.49s/it]Dataset: data-is-better-together/10k_prompts_ranked:  76%|███████▋  | 153/200 [03:28<01:01,  1.32s/it]Dataset: data-is-better-together/10k_prompts_ranked:  78%|███████▊  | 155/200 [03:29<00:34,  1.32it/s]Dataset: data-is-better-together/10k_prompts_ranked:  78%|███████▊  | 156/200 [03:30<00:46,  1.06s/it]Dataset: data-is-better-together/10k_prompts_ranked:  78%|███████▊  | 157/200 [03:32<00:47,  1.11s/it]Dataset: data-is-better-together/10k_prompts_ranked:  79%|███████▉  | 158/200 [03:33<00:51,  1.22s/it]Dataset: data-is-better-together/10k_prompts_ranked:  80%|███████▉  | 159/200 [03:34<00:50,  1.23s/it]Dataset: data-is-better-together/10k_prompts_ranked:  80%|████████  | 160/200 [03:36<00:52,  1.31s/it]Dataset: data-is-better-together/10k_prompts_ranked:  80%|████████  | 161/200 [03:37<00:51,  1.32s/it]Dataset: data-is-better-together/10k_prompts_ranked:  81%|████████  | 162/200 [03:39<00:55,  1.46s/it]Dataset: data-is-better-together/10k_prompts_ranked:  82%|████████▏ | 163/200 [03:41<01:03,  1.72s/it]Dataset: data-is-better-together/10k_prompts_ranked:  82%|████████▏ | 164/200 [03:43<01:02,  1.74s/it]Dataset: data-is-better-together/10k_prompts_ranked:  82%|████████▎ | 165/200 [03:45<01:02,  1.79s/it]Dataset: data-is-better-together/10k_prompts_ranked:  83%|████████▎ | 166/200 [03:47<01:01,  1.82s/it]Dataset: data-is-better-together/10k_prompts_ranked:  84%|████████▎ | 167/200 [03:49<01:05,  1.97s/it]Dataset: data-is-better-together/10k_prompts_ranked:  84%|████████▍ | 168/200 [03:51<00:59,  1.87s/it]Dataset: data-is-better-together/10k_prompts_ranked:  84%|████████▍ | 169/200 [03:53<00:57,  1.84s/it]Dataset: data-is-better-together/10k_prompts_ranked:  85%|████████▌ | 170/200 [03:55<00:54,  1.83s/it]Dataset: data-is-better-together/10k_prompts_ranked:  86%|████████▌ | 171/200 [03:57<00:54,  1.90s/it]Dataset: data-is-better-together/10k_prompts_ranked:  86%|████████▌ | 172/200 [03:58<00:52,  1.87s/it]Dataset: data-is-better-together/10k_prompts_ranked:  86%|████████▋ | 173/200 [04:00<00:48,  1.81s/it]Dataset: data-is-better-together/10k_prompts_ranked:  87%|████████▋ | 174/200 [04:02<00:47,  1.84s/it]Dataset: data-is-better-together/10k_prompts_ranked:  88%|████████▊ | 175/200 [04:04<00:45,  1.82s/it]Dataset: data-is-better-together/10k_prompts_ranked:  88%|████████▊ | 176/200 [04:06<00:44,  1.86s/it]Dataset: data-is-better-together/10k_prompts_ranked:  88%|████████▊ | 177/200 [04:08<00:45,  1.98s/it]Dataset: data-is-better-together/10k_prompts_ranked:  89%|████████▉ | 178/200 [04:09<00:37,  1.72s/it]Dataset: data-is-better-together/10k_prompts_ranked:  90%|████████▉ | 179/200 [04:12<00:41,  1.95s/it]Dataset: data-is-better-together/10k_prompts_ranked:  90%|█████████ | 180/200 [04:14<00:40,  2.04s/it]Dataset: data-is-better-together/10k_prompts_ranked:  90%|█████████ | 181/200 [04:14<00:29,  1.57s/it]Dataset: data-is-better-together/10k_prompts_ranked:  91%|█████████ | 182/200 [04:16<00:27,  1.55s/it]Dataset: data-is-better-together/10k_prompts_ranked:  92%|█████████▏| 184/200 [04:17<00:17,  1.07s/it]Dataset: data-is-better-together/10k_prompts_ranked:  92%|█████████▎| 185/200 [04:19<00:19,  1.32s/it]Dataset: data-is-better-together/10k_prompts_ranked:  93%|█████████▎| 186/200 [04:21<00:19,  1.39s/it]Average accept_length over 54 steps: 3.8148
Average accept_length over 64 steps: 3.1250
Average accept_length over 27 steps: 3.5926
Average accept_length over 63 steps: 2.7937
Average accept_length over 51 steps: 3.8235
Average accept_length over 62 steps: 3.1452
Average accept_length over 41 steps: 5.2683
Average accept_length over 13 steps: 4.6923
Average accept_length over 48 steps: 4.5208
Average accept_length over 37 steps: 6.0811
Average accept_length over 64 steps: 3.0469
Average accept_length over 15 steps: 1.7333
Average accept_length over 26 steps: 2.1923
Average accept_length over 50 steps: 4.2000
Average accept_length over 48 steps: 4.3542
Average accept_length over 69 steps: 2.7536
Average accept_length over 58 steps: 3.4655
Average accept_length over 22 steps: 3.7273
Average accept_length over 49 steps: 2.5918
Average accept_length over 22 steps: 2.8636
Average accept_length over 37 steps: 2.8378
Average accept_length over 28 steps: 5.0714
Average accept_length over 53 steps: 3.9434
Average accept_length over 63 steps: 3.0952
Average accept_length over 54 steps: 3.7963
Average accept_length over 49 steps: 4.2653
Average accept_length over 47 steps: 4.4894
Average accept_length over 56 steps: 3.6071
Average accept_length over 61 steps: 3.2623
Average accept_length over 33 steps: 3.2727
Average accept_length over 53 steps: 3.3019
Average accept_length over 79 steps: 2.3038
Average accept_length over 56 steps: 3.7321
Average accept_length over 46 steps: 4.5870
Average accept_length over 50 steps: 4.2600
Average accept_length over 55 steps: 3.7455
Average accept_length over 49 steps: 4.2449
Average accept_length over 40 steps: 5.4750
Average accept_length over 57 steps: 1.2105
Average accept_length over 53 steps: 3.8491
Average accept_length over 24 steps: 3.6250
Average accept_length over 64 steps: 3.0938
Average accept_length over 75 steps: 2.4533
Average accept_length over 74 steps: 2.5270
Average accept_length over 50 steps: 4.2800
Average accept_length over 13 steps: 5.0769
Average accept_length over 17 steps: 3.5294
Average accept_length over 8 steps: 3.3750
Average accept_length over 50 steps: 4.1400
Average accept_length over 51 steps: 4.1765
Average accept_length over 62 steps: 3.2581
Average accept_length over 41 steps: 5.3415
Average accept_length over 50 steps: 3.0400
Average accept_length over 17 steps: 4.2941
Average accept_length over 25 steps: 3.8000
Average accept_length over 27 steps: 4.4815
Average accept_length over 54 steps: 2.5926
Average accept_length over 1 steps: 4.0000
Average accept_length over 44 steps: 4.0455
Average accept_length over 56 steps: 3.6071
Average accept_length over 13 steps: 4.0000
Average accept_length over 71 steps: 2.6901
Average accept_length over 68 steps: 2.8676
Average accept_length over 23 steps: 5.0870
Average accept_length over 72 steps: 2.5694
Average accept_length over 48 steps: 2.5208
Average accept_length over 54 steps: 3.3333
Average accept_length over 44 steps: 5.0000
Average accept_length over 9 steps: 3.8889
Average accept_length over 6 steps: 3.5000
Average accept_length over 27 steps: 3.8519
Average accept_length over 60 steps: 3.3000
Average accept_length over 62 steps: 3.1774
Average accept_length over 22 steps: 4.7727
Average accept_length over 53 steps: 3.8868
Average accept_length over 72 steps: 2.5694
Average accept_length over 46 steps: 3.4783
Average accept_length over 6 steps: 4.5000
Average accept_length over 63 steps: 3.1111
Average accept_length over 52 steps: 3.9808
Average accept_length over 59 steps: 3.3559
Average accept_length over 12 steps: 1.4167
Average accept_length over 33 steps: 2.9394
Average accept_length over 71 steps: 2.6197
Average accept_length over 50 steps: 2.9400
Average accept_length over 43 steps: 5.1628
Average accept_length over 67 steps: 2.8358
Average accept_length over 51 steps: 4.1176
Average accept_length over 56 steps: 3.6429
Average accept_length over 50 steps: 4.2600
Average accept_length over 23 steps: 4.1739
Average accept_length over 54 steps: 3.7593
Average accept_length over 64 steps: 3.0469
Average accept_length over 27 steps: 4.1852
Average accept_length over 52 steps: 3.9423
Average accept_length over 72 steps: 2.5694
Average accept_length over 58 steps: 3.0172
Average accept_length over 60 steps: 3.3333
Average accept_length over 77 steps: 2.3377
Average accept_length over 2 steps: 5.0000
Average accept_length over 50 steps: 4.1400
Average accept_length over 58 steps: 3.4828
Average accept_length over 41 steps: 2.0976
Average accept_length over 46 steps: 4.7609
Average accept_length over 35 steps: 0.0286
Average accept_length over 40 steps: 5.4250
Average accept_length over 52 steps: 3.9808
Average accept_length over 64 steps: 2.6562
Average accept_length over 19 steps: 3.9474
Average accept_length over 72 steps: 2.5833
Average accept_length over 53 steps: 3.9057
Average accept_length over 43 steps: 5.0465
Average accept_length over 73 steps: 2.5479
Average accept_length over 21 steps: 4.1905
Average accept_length over 18 steps: 2.2222
Average accept_length over 5 steps: 3.8000
Average accept_length over 19 steps: 2.6842
Average accept_length over 52 steps: 3.9808
Average accept_length over 38 steps: 5.9211
Average accept_length over 54 steps: 3.7778
Average accept_length over 49 steps: 4.3061
Average accept_length over 49 steps: 4.2449
Average accept_length over 54 steps: 3.8889
Average accept_length over 72 steps: 2.5833
Average accept_length over 9 steps: 3.5556
Average accept_length over 49 steps: 3.4694
Average accept_length over 55 steps: 3.6909
Average accept_length over 18 steps: 4.3333
Average accept_length over 58 steps: 3.5172
Average accept_length over 58 steps: 3.4483
Average accept_length over 54 steps: 3.7778
Average accept_length over 55 steps: 3.4909
Average accept_length over 28 steps: 3.0714
Average accept_length over 6 steps: 4.3333
Average accept_length over 12 steps: 3.6667
Average accept_length over 7 steps: 3.4286
Average accept_length over 21 steps: 5.8571
Average accept_length over 56 steps: 3.6250
Average accept_length over 66 steps: 2.9091
Average accept_length over 61 steps: 3.0492
Average accept_length over 46 steps: 4.5870
Average accept_length over 40 steps: 3.3000
Average accept_length over 23 steps: 3.5217
Average accept_length over 8 steps: 2.2500
Average accept_length over 52 steps: 4.0192
Average accept_length over 6 steps: 6.1667
Average accept_length over 47 steps: 4.4681
Average accept_length over 47 steps: 4.4681
Average accept_length over 49 steps: 4.2857
Average accept_length over 58 steps: 3.4828
Average accept_length over 56 steps: 3.7143
Average accept_length over 46 steps: 4.2609
Average accept_length over 30 steps: 2.8000
Average accept_length over 2 steps: 4.0000
Average accept_length over 3 steps: 3.6667
Average accept_length over 65 steps: 2.9692
Average accept_length over 40 steps: 5.1000
Average accept_length over 49 steps: 4.2653
Average accept_length over 41 steps: 3.8049
Average accept_length over 49 steps: 4.3265
Average accept_length over 44 steps: 2.3864
Average accept_length over 58 steps: 3.4655
Average accept_length over 67 steps: 2.8955
Average accept_length over 58 steps: 3.4483
Average accept_length over 61 steps: 3.2787
Average accept_length over 61 steps: 3.2951
Average accept_length over 75 steps: 2.4533
Average accept_length over 52 steps: 4.0962
Average accept_length over 57 steps: 3.5789
Average accept_length over 49 steps: 3.0408
Average accept_length over 66 steps: 2.9091
Average accept_length over 58 steps: 3.4483
Average accept_length over 53 steps: 3.9623
Average accept_length over 62 steps: 3.1935
Average accept_length over 56 steps: 3.6250
Average accept_length over 62 steps: 3.1774
Average accept_length over 72 steps: 2.5694
Average accept_length over 34 steps: 4.0588
Average accept_length over 80 steps: 2.2625
Average accept_length over 72 steps: 2.5694
Average accept_length over 14 steps: 4.3571
Average accept_length over 47 steps: 4.6170
Average accept_length over 2 steps: 6.0000
Average accept_length over 29 steps: 2.0000
Average accept_length over 67 steps: 2.8358
Average accept_length over 50 steps: 4.1400
Dataset: data-is-better-together/10k_prompts_ranked:  94%|█████████▎| 187/200 [04:22<00:17,  1.37s/it]Dataset: data-is-better-together/10k_prompts_ranked:  94%|█████████▍| 188/200 [04:23<00:14,  1.20s/it]Dataset: data-is-better-together/10k_prompts_ranked:  94%|█████████▍| 189/200 [04:24<00:12,  1.12s/it]Dataset: data-is-better-together/10k_prompts_ranked:  95%|█████████▌| 190/200 [04:25<00:11,  1.17s/it]Dataset: data-is-better-together/10k_prompts_ranked:  96%|█████████▌| 191/200 [04:26<00:11,  1.31s/it]Dataset: data-is-better-together/10k_prompts_ranked:  96%|█████████▌| 192/200 [04:27<00:09,  1.15s/it]Dataset: data-is-better-together/10k_prompts_ranked:  96%|█████████▋| 193/200 [04:29<00:08,  1.27s/it]Dataset: data-is-better-together/10k_prompts_ranked:  97%|█████████▋| 194/200 [04:30<00:08,  1.36s/it]Dataset: data-is-better-together/10k_prompts_ranked:  98%|█████████▊| 195/200 [04:32<00:07,  1.41s/it]Dataset: data-is-better-together/10k_prompts_ranked:  98%|█████████▊| 196/200 [04:32<00:04,  1.09s/it]Dataset: data-is-better-together/10k_prompts_ranked:  98%|█████████▊| 197/200 [04:34<00:03,  1.19s/it]Dataset: data-is-better-together/10k_prompts_ranked:  99%|█████████▉| 198/200 [04:36<00:02,  1.41s/it]Dataset: data-is-better-together/10k_prompts_ranked: 100%|█████████▉| 199/200 [04:37<00:01,  1.49s/it]Dataset: data-is-better-together/10k_prompts_ranked: 100%|██████████| 200/200 [04:39<00:00,  1.51s/it]Dataset: data-is-better-together/10k_prompts_ranked: 100%|██████████| 200/200 [04:39<00:00,  1.40s/it]
Average accept_length over 41 steps: 5.2683
Average accept_length over 24 steps: 1.8333
Average accept_length over 28 steps: 4.8571
Average accept_length over 41 steps: 5.2683
Average accept_length over 51 steps: 3.4706
Average accept_length over 23 steps: 3.5652
Average accept_length over 46 steps: 4.5652
Average accept_length over 50 steps: 4.1400
Average accept_length over 47 steps: 4.5319
Average accept_length over 10 steps: 4.3000
Average accept_length over 44 steps: 3.2500
Average accept_length over 61 steps: 3.2459
Average accept_length over 52 steps: 3.9423
Average accept_length over 48 steps: 4.4792
🔄 Completions saved to /home/ubuntu/sd/HandEval/outputs/eagleT0.7_vicuna-7b-v1.3/data-is-better-together/10k_prompts_ranked_completions.jsonl

✅  Results saved to /home/ubuntu/sd/HandEval/outputs/eagleT0.7_vicuna-7b-v1.3/data-is-better-together/10k_prompts_ranked_metrics.json
{
  "num_samples": 200,
  "total_time_sec": 279.34102845191956,
  "avg_time_per_sample_sec": 1.3967051422595977,
  "samples_file": "outputs/eagleT0.7_vicuna-7b-v1.3/data-is-better-together/10k_prompts_ranked_completions.jsonl"
}
