LlamaForCausalLM has generative capabilities, as `prepare_inputs_for_generation` is explicitly overwritten. However, it doesn't directly inherit from `GenerationMixin`. From 👉v4.50👈 onwards, `PreTrainedModel` will NOT inherit from `GenerationMixin`, and this model will lose the ability to call `generate` and other related functions.
  - If you're using `trust_remote_code=True`, you can get rid of this warning by loading the model with an auto class. See https://huggingface.co/docs/transformers/en/model_doc/auto#auto-classes
  - If you are the owner of the model architecture code, please modify your model class such that it inherits from `GenerationMixin` (after `PreTrainedModel`, otherwise you'll get an exception).
  - If you are not the owner of the model architecture class, please contact the model code owner to update it.
Loading EAGLE model from ../model_ckpt/EAGLE-Vicuna-7B-v1.3 with dtype float16
Base model: ../model_ckpt/vicuna-7b-v1.3
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:01<00:01,  1.59s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:02<00:00,  1.02s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:02<00:00,  1.11s/it]
/home/ubuntu/sd/EAGLE/eagle/model/ea_model.py:123: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  ea_layer_state_dict = torch.load(load_model_path,
You are using the default legacy behaviour of the <class 'transformers.models.llama.tokenization_llama.LlamaTokenizer'>. This is expected, and simply means that the `legacy` (previous) behavior will be used so nothing changes for you. If you want to use the new behaviour, set `legacy=False`. This should only be set if you understand what it means, and thoroughly read the reason why this was added as explained in https://github.com/huggingface/transformers/pull/24565 - if you loaded a llama tokenizer from a GGUF file you can ignore this message
/home/ubuntu/sd/EAGLE/eagle/model/cnets1.py:510: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  weights = torch.load(local_emb_path)
Dataset: data-is-better-together/10k_prompts_ranked:   0%|          | 0/200 [00:00<?, ?it/s]/home/ubuntu/miniconda3/envs/sd/lib/python3.10/site-packages/torch/_dynamo/eval_frame.py:632: UserWarning: torch.utils.checkpoint: the use_reentrant parameter should be passed explicitly. In version 2.5 we will raise an exception if use_reentrant is not passed. use_reentrant=False is recommended, but if you need to preserve the current default behavior, you can pass use_reentrant=True. Refer to docs for more details on the differences between the two variants.
  return fn(*args, **kwargs)
/home/ubuntu/miniconda3/envs/sd/lib/python3.10/site-packages/torch/utils/checkpoint.py:87: UserWarning: None of the inputs have requires_grad=True. Gradients will be None
  warnings.warn(
Dataset: data-is-better-together/10k_prompts_ranked:   0%|          | 1/200 [00:02<06:40,  2.01s/it]Dataset: data-is-better-together/10k_prompts_ranked:   1%|          | 2/200 [00:03<06:07,  1.86s/it]Dataset: data-is-better-together/10k_prompts_ranked:   2%|▏         | 3/200 [00:05<05:37,  1.71s/it]Dataset: data-is-better-together/10k_prompts_ranked:   2%|▏         | 4/200 [00:07<05:48,  1.78s/it]Dataset: data-is-better-together/10k_prompts_ranked:   2%|▎         | 5/200 [00:08<05:06,  1.57s/it]Dataset: data-is-better-together/10k_prompts_ranked:   3%|▎         | 6/200 [00:10<05:24,  1.67s/it]Dataset: data-is-better-together/10k_prompts_ranked:   4%|▎         | 7/200 [00:11<05:00,  1.56s/it]Dataset: data-is-better-together/10k_prompts_ranked:   4%|▍         | 8/200 [00:11<03:48,  1.19s/it]Dataset: data-is-better-together/10k_prompts_ranked:   4%|▍         | 9/200 [00:13<03:48,  1.20s/it]Dataset: data-is-better-together/10k_prompts_ranked:   5%|▌         | 10/200 [00:14<03:43,  1.17s/it]Dataset: data-is-better-together/10k_prompts_ranked:   6%|▌         | 11/200 [00:15<04:07,  1.31s/it]Dataset: data-is-better-together/10k_prompts_ranked:   6%|▌         | 12/200 [00:16<03:13,  1.03s/it]Dataset: data-is-better-together/10k_prompts_ranked:   6%|▋         | 13/200 [00:17<03:03,  1.02it/s]Dataset: data-is-better-together/10k_prompts_ranked:   7%|▋         | 14/200 [00:18<03:18,  1.07s/it]Dataset: data-is-better-together/10k_prompts_ranked:   8%|▊         | 15/200 [00:19<03:32,  1.15s/it]Dataset: data-is-better-together/10k_prompts_ranked:   8%|▊         | 16/200 [00:21<04:12,  1.37s/it]Dataset: data-is-better-together/10k_prompts_ranked:   8%|▊         | 17/200 [00:23<04:17,  1.41s/it]Dataset: data-is-better-together/10k_prompts_ranked:   9%|▉         | 18/200 [00:23<03:35,  1.18s/it]Dataset: data-is-better-together/10k_prompts_ranked:  10%|▉         | 19/200 [00:25<04:12,  1.40s/it]Dataset: data-is-better-together/10k_prompts_ranked:  10%|█         | 20/200 [00:26<03:39,  1.22s/it]Dataset: data-is-better-together/10k_prompts_ranked:  10%|█         | 21/200 [00:27<03:50,  1.29s/it]Dataset: data-is-better-together/10k_prompts_ranked:  11%|█         | 22/200 [00:28<03:21,  1.13s/it]Dataset: data-is-better-together/10k_prompts_ranked:  12%|█▏        | 23/200 [00:30<03:51,  1.31s/it]Dataset: data-is-better-together/10k_prompts_ranked:  12%|█▏        | 24/200 [00:32<04:02,  1.38s/it]Dataset: data-is-better-together/10k_prompts_ranked:  12%|█▎        | 25/200 [00:33<03:41,  1.27s/it]Dataset: data-is-better-together/10k_prompts_ranked:  13%|█▎        | 26/200 [00:34<03:50,  1.32s/it]Dataset: data-is-better-together/10k_prompts_ranked:  14%|█▎        | 27/200 [00:35<03:51,  1.34s/it]Dataset: data-is-better-together/10k_prompts_ranked:  14%|█▍        | 28/200 [00:37<04:07,  1.44s/it]Dataset: data-is-better-together/10k_prompts_ranked:  14%|█▍        | 29/200 [00:39<04:20,  1.52s/it]Dataset: data-is-better-together/10k_prompts_ranked:  15%|█▌        | 30/200 [00:40<03:45,  1.33s/it]Dataset: data-is-better-together/10k_prompts_ranked:  16%|█▌        | 31/200 [00:41<04:00,  1.43s/it]Dataset: data-is-better-together/10k_prompts_ranked:  16%|█▌        | 32/200 [00:43<04:35,  1.64s/it]Dataset: data-is-better-together/10k_prompts_ranked:  16%|█▋        | 33/200 [00:45<04:27,  1.60s/it]Dataset: data-is-better-together/10k_prompts_ranked:  17%|█▋        | 34/200 [00:46<04:13,  1.53s/it]Dataset: data-is-better-together/10k_prompts_ranked:  18%|█▊        | 35/200 [00:48<04:15,  1.55s/it]Dataset: data-is-better-together/10k_prompts_ranked:  18%|█▊        | 36/200 [00:49<04:08,  1.51s/it]Dataset: data-is-better-together/10k_prompts_ranked:  18%|█▊        | 37/200 [00:51<03:58,  1.46s/it]Dataset: data-is-better-together/10k_prompts_ranked:  19%|█▉        | 38/200 [00:52<03:52,  1.43s/it]Dataset: data-is-better-together/10k_prompts_ranked:  20%|█▉        | 39/200 [00:53<03:25,  1.28s/it]Dataset: data-is-better-together/10k_prompts_ranked:  20%|██        | 40/200 [00:54<03:34,  1.34s/it]Dataset: data-is-better-together/10k_prompts_ranked:  20%|██        | 41/200 [00:55<03:13,  1.22s/it]Dataset: data-is-better-together/10k_prompts_ranked:  21%|██        | 42/200 [00:57<03:39,  1.39s/it]Dataset: data-is-better-together/10k_prompts_ranked:  22%|██▏       | 43/200 [00:58<03:36,  1.38s/it]Dataset: data-is-better-together/10k_prompts_ranked:  22%|██▏       | 44/200 [01:00<03:57,  1.52s/it]Dataset: data-is-better-together/10k_prompts_ranked:  22%|██▎       | 45/200 [01:02<03:42,  1.44s/it]Dataset: data-is-better-together/10k_prompts_ranked:  23%|██▎       | 46/200 [01:02<03:02,  1.18s/it]Dataset: data-is-better-together/10k_prompts_ranked:  24%|██▎       | 47/200 [01:03<02:33,  1.01s/it]Dataset: data-is-better-together/10k_prompts_ranked:  24%|██▍       | 48/200 [01:03<01:55,  1.32it/s]Dataset: data-is-better-together/10k_prompts_ranked:  24%|██▍       | 49/200 [01:04<02:29,  1.01it/s]Dataset: data-is-better-together/10k_prompts_ranked:  25%|██▌       | 50/200 [01:06<02:54,  1.16s/it]Dataset: data-is-better-together/10k_prompts_ranked:  26%|██▌       | 51/200 [01:08<03:16,  1.32s/it]Dataset: data-is-better-together/10k_prompts_ranked:  26%|██▌       | 52/200 [01:09<03:11,  1.29s/it]Dataset: data-is-better-together/10k_prompts_ranked:  26%|██▋       | 53/200 [01:10<03:08,  1.28s/it]Dataset: data-is-better-together/10k_prompts_ranked:  27%|██▋       | 54/200 [01:11<02:57,  1.22s/it]Dataset: data-is-better-together/10k_prompts_ranked:  28%|██▊       | 55/200 [01:12<02:16,  1.06it/s]Dataset: data-is-better-together/10k_prompts_ranked:  28%|██▊       | 56/200 [01:13<02:17,  1.04it/s]Dataset: data-is-better-together/10k_prompts_ranked:  28%|██▊       | 57/200 [01:14<02:48,  1.18s/it]Dataset: data-is-better-together/10k_prompts_ranked:  30%|██▉       | 59/200 [01:16<02:09,  1.09it/s]Dataset: data-is-better-together/10k_prompts_ranked:  30%|███       | 60/200 [01:18<02:48,  1.20s/it]Dataset: data-is-better-together/10k_prompts_ranked:  30%|███       | 61/200 [01:19<02:42,  1.17s/it]Dataset: data-is-better-together/10k_prompts_ranked:  31%|███       | 62/200 [01:21<03:09,  1.37s/it]Dataset: data-is-better-together/10k_prompts_ranked:  32%|███▏      | 63/200 [01:22<03:22,  1.48s/it]Dataset: data-is-better-together/10k_prompts_ranked:  32%|███▏      | 64/200 [01:23<02:48,  1.24s/it]Dataset: data-is-better-together/10k_prompts_ranked:  32%|███▎      | 65/200 [01:24<02:46,  1.23s/it]Dataset: data-is-better-together/10k_prompts_ranked:  33%|███▎      | 66/200 [01:26<03:24,  1.53s/it]Dataset: data-is-better-together/10k_prompts_ranked:  34%|███▎      | 67/200 [01:28<03:11,  1.44s/it]Dataset: data-is-better-together/10k_prompts_ranked:  34%|███▍      | 68/200 [01:29<03:02,  1.39s/it]Dataset: data-is-better-together/10k_prompts_ranked:  34%|███▍      | 69/200 [01:29<02:15,  1.03s/it]Dataset: data-is-better-together/10k_prompts_ranked:  35%|███▌      | 70/200 [01:29<01:47,  1.21it/s]Dataset: data-is-better-together/10k_prompts_ranked:  36%|███▌      | 71/200 [01:30<01:21,  1.58it/s]Dataset: data-is-better-together/10k_prompts_ranked:  36%|███▌      | 72/200 [01:31<01:55,  1.10it/s]Dataset: data-is-better-together/10k_prompts_ranked:  36%|███▋      | 73/200 [01:33<02:16,  1.08s/it]Dataset: data-is-better-together/10k_prompts_ranked:  37%|███▋      | 74/200 [01:34<02:09,  1.02s/it]Dataset: data-is-better-together/10k_prompts_ranked:  38%|███▊      | 75/200 [01:35<02:29,  1.20s/it]Dataset: data-is-better-together/10k_prompts_ranked:  38%|███▊      | 76/200 [01:37<02:42,  1.31s/it]Dataset: data-is-better-together/10k_prompts_ranked:  38%|███▊      | 77/200 [01:38<02:55,  1.42s/it]Dataset: data-is-better-together/10k_prompts_ranked:  39%|███▉      | 78/200 [01:39<02:19,  1.14s/it]Dataset: data-is-better-together/10k_prompts_ranked:  40%|███▉      | 79/200 [01:41<02:50,  1.41s/it]Dataset: data-is-better-together/10k_prompts_ranked:  40%|████      | 80/200 [01:42<02:47,  1.39s/it]Dataset: data-is-better-together/10k_prompts_ranked:  40%|████      | 81/200 [01:44<02:54,  1.46s/it]Dataset: data-is-better-together/10k_prompts_ranked:  41%|████      | 82/200 [01:45<02:22,  1.21s/it]Dataset: data-is-better-together/10k_prompts_ranked:  42%|████▏     | 83/200 [01:45<01:59,  1.02s/it]Dataset: data-is-better-together/10k_prompts_ranked:  42%|████▏     | 84/200 [01:47<02:30,  1.30s/it]Dataset: data-is-better-together/10k_prompts_ranked:  42%|████▎     | 85/200 [01:48<02:20,  1.22s/it]Dataset: data-is-better-together/10k_prompts_ranked:  43%|████▎     | 86/200 [01:49<02:13,  1.17s/it]Dataset: data-is-better-together/10k_prompts_ranked:  44%|████▎     | 87/200 [01:51<02:30,  1.33s/it]Dataset: data-is-better-together/10k_prompts_ranked:  44%|████▍     | 88/200 [01:52<02:19,  1.24s/it]Dataset: data-is-better-together/10k_prompts_ranked:  44%|████▍     | 89/200 [01:54<02:31,  1.37s/it]Dataset: data-is-better-together/10k_prompts_ranked:  45%|████▌     | 90/200 [01:55<02:28,  1.35s/it]Dataset: data-is-better-together/10k_prompts_ranked:  46%|████▌     | 91/200 [01:56<02:06,  1.16s/it]Dataset: data-is-better-together/10k_prompts_ranked:  46%|████▌     | 92/200 [01:57<02:15,  1.26s/it]Dataset: data-is-better-together/10k_prompts_ranked:  46%|████▋     | 93/200 [01:59<02:27,  1.37s/it]Dataset: data-is-better-together/10k_prompts_ranked:  47%|████▋     | 94/200 [01:59<01:54,  1.08s/it]Dataset: data-is-better-together/10k_prompts_ranked:  48%|████▊     | 95/200 [02:01<02:08,  1.22s/it]Dataset: data-is-better-together/10k_prompts_ranked:  48%|████▊     | 96/200 [02:03<02:34,  1.49s/it]Dataset: data-is-better-together/10k_prompts_ranked:  48%|████▊     | 97/200 [02:04<02:22,  1.38s/it]Dataset: data-is-better-together/10k_prompts_ranked:  49%|████▉     | 98/200 [02:05<02:22,  1.40s/it]Dataset: data-is-better-together/10k_prompts_ranked:  50%|████▉     | 99/200 [02:07<02:18,  1.37s/it]Dataset: data-is-better-together/10k_prompts_ranked:  50%|█████     | 101/200 [02:08<01:43,  1.05s/it]Dataset: data-is-better-together/10k_prompts_ranked:  51%|█████     | 102/200 [02:09<01:37,  1.00it/s]Dataset: data-is-better-together/10k_prompts_ranked:  52%|█████▏    | 103/200 [02:10<01:33,  1.04it/s]Dataset: data-is-better-together/10k_prompts_ranked:  52%|█████▏    | 104/200 [02:11<01:44,  1.09s/it]Token indices sequence length is longer than the specified maximum sequence length for this model (3654 > 2048). Running this sequence through the model will result in indexing errors
Dataset: data-is-better-together/10k_prompts_ranked:  52%|█████▎    | 105/200 [02:20<05:10,  3.27s/it]Dataset: data-is-better-together/10k_prompts_ranked:  53%|█████▎    | 106/200 [02:21<04:15,  2.72s/it]Dataset: data-is-better-together/10k_prompts_ranked:  54%|█████▎    | 107/200 [02:23<03:50,  2.48s/it]Dataset: data-is-better-together/10k_prompts_ranked:  54%|█████▍    | 108/200 [02:25<03:22,  2.20s/it]Dataset: data-is-better-together/10k_prompts_ranked:  55%|█████▍    | 109/200 [02:25<02:32,  1.67s/it]Dataset: data-is-better-together/10k_prompts_ranked:  55%|█████▌    | 110/200 [02:27<02:40,  1.78s/it]Dataset: data-is-better-together/10k_prompts_ranked:  56%|█████▌    | 111/200 [02:29<02:30,  1.69s/it]Dataset: data-is-better-together/10k_prompts_ranked:  56%|█████▌    | 112/200 [02:30<02:09,  1.47s/it]Dataset: data-is-better-together/10k_prompts_ranked:  56%|█████▋    | 113/200 [02:32<02:26,  1.69s/it]Dataset: data-is-better-together/10k_prompts_ranked:  57%|█████▋    | 114/200 [02:32<01:52,  1.30s/it]Dataset: data-is-better-together/10k_prompts_ranked:  57%|█████▊    | 115/200 [02:33<01:29,  1.05s/it]Dataset: data-is-better-together/10k_prompts_ranked:  58%|█████▊    | 116/200 [02:33<01:05,  1.28it/s]Dataset: data-is-better-together/10k_prompts_ranked:  58%|█████▊    | 117/200 [02:34<01:09,  1.20it/s]Dataset: data-is-better-together/10k_prompts_ranked:  59%|█████▉    | 118/200 [02:35<01:24,  1.03s/it]Dataset: data-is-better-together/10k_prompts_ranked:  60%|█████▉    | 119/200 [02:37<01:36,  1.20s/it]Dataset: data-is-better-together/10k_prompts_ranked:  60%|██████    | 120/200 [02:38<01:44,  1.30s/it]Dataset: data-is-better-together/10k_prompts_ranked:  60%|██████    | 121/200 [02:40<01:42,  1.30s/it]Dataset: data-is-better-together/10k_prompts_ranked:  61%|██████    | 122/200 [02:41<01:36,  1.24s/it]Dataset: data-is-better-together/10k_prompts_ranked:  62%|██████▏   | 123/200 [02:42<01:44,  1.36s/it]Dataset: data-is-better-together/10k_prompts_ranked:  62%|██████▏   | 124/200 [02:44<01:51,  1.47s/it]Dataset: data-is-better-together/10k_prompts_ranked:  62%|██████▎   | 125/200 [02:45<01:32,  1.23s/it]Dataset: data-is-better-together/10k_prompts_ranked:  63%|██████▎   | 126/200 [02:45<01:10,  1.05it/s]Dataset: data-is-better-together/10k_prompts_ranked:  64%|██████▎   | 127/200 [02:46<01:16,  1.04s/it]Dataset: data-is-better-together/10k_prompts_ranked:  64%|██████▍   | 128/200 [02:47<01:00,  1.19it/s]Dataset: data-is-better-together/10k_prompts_ranked:  64%|██████▍   | 129/200 [02:48<01:17,  1.10s/it]Dataset: data-is-better-together/10k_prompts_ranked:  65%|██████▌   | 130/200 [02:50<01:26,  1.23s/it]Dataset: data-is-better-together/10k_prompts_ranked:  66%|██████▌   | 131/200 [02:52<01:32,  1.34s/it]Dataset: data-is-better-together/10k_prompts_ranked:  66%|██████▌   | 132/200 [02:53<01:24,  1.24s/it]Dataset: data-is-better-together/10k_prompts_ranked:  66%|██████▋   | 133/200 [02:54<01:33,  1.39s/it]Dataset: data-is-better-together/10k_prompts_ranked:  67%|██████▋   | 134/200 [02:55<01:08,  1.04s/it]Dataset: data-is-better-together/10k_prompts_ranked:  68%|██████▊   | 135/200 [02:55<00:52,  1.23it/s]Dataset: data-is-better-together/10k_prompts_ranked:  68%|██████▊   | 136/200 [02:55<00:39,  1.63it/s]Dataset: data-is-better-together/10k_prompts_ranked:  68%|██████▊   | 137/200 [02:56<00:43,  1.44it/s]Dataset: data-is-better-together/10k_prompts_ranked:  69%|██████▉   | 138/200 [02:58<01:02,  1.00s/it]Dataset: data-is-better-together/10k_prompts_ranked:  70%|██████▉   | 139/200 [02:59<01:09,  1.14s/it]Dataset: data-is-better-together/10k_prompts_ranked:  70%|███████   | 140/200 [03:01<01:20,  1.34s/it]Dataset: data-is-better-together/10k_prompts_ranked:  70%|███████   | 141/200 [03:02<01:16,  1.30s/it]Dataset: data-is-better-together/10k_prompts_ranked:  71%|███████   | 142/200 [03:03<01:02,  1.08s/it]Dataset: data-is-better-together/10k_prompts_ranked:  72%|███████▏  | 143/200 [03:03<00:56,  1.02it/s]Dataset: data-is-better-together/10k_prompts_ranked:  72%|███████▏  | 144/200 [03:04<00:42,  1.33it/s]Dataset: data-is-better-together/10k_prompts_ranked:  72%|███████▎  | 145/200 [03:05<00:50,  1.10it/s]Dataset: data-is-better-together/10k_prompts_ranked:  73%|███████▎  | 146/200 [03:05<00:37,  1.43it/s]Dataset: data-is-better-together/10k_prompts_ranked:  74%|███████▎  | 147/200 [03:07<00:48,  1.10it/s]Dataset: data-is-better-together/10k_prompts_ranked:  74%|███████▍  | 148/200 [03:08<00:54,  1.06s/it]Dataset: data-is-better-together/10k_prompts_ranked:  74%|███████▍  | 149/200 [03:09<00:58,  1.15s/it]Dataset: data-is-better-together/10k_prompts_ranked:  75%|███████▌  | 150/200 [03:10<00:47,  1.06it/s]Dataset: data-is-better-together/10k_prompts_ranked:  76%|███████▌  | 151/200 [03:11<00:47,  1.03it/s]Dataset: data-is-better-together/10k_prompts_ranked:  76%|███████▌  | 152/200 [03:12<00:53,  1.11s/it]Dataset: data-is-better-together/10k_prompts_ranked:  76%|███████▋  | 153/200 [03:13<00:48,  1.02s/it]Dataset: data-is-better-together/10k_prompts_ranked:  78%|███████▊  | 155/200 [03:13<00:26,  1.67it/s]Dataset: data-is-better-together/10k_prompts_ranked:  78%|███████▊  | 156/200 [03:15<00:41,  1.06it/s]Dataset: data-is-better-together/10k_prompts_ranked:  78%|███████▊  | 157/200 [03:17<00:44,  1.03s/it]Dataset: data-is-better-together/10k_prompts_ranked:  79%|███████▉  | 158/200 [03:18<00:49,  1.17s/it]Dataset: data-is-better-together/10k_prompts_ranked:  80%|███████▉  | 159/200 [03:19<00:45,  1.12s/it]Dataset: data-is-better-together/10k_prompts_ranked:  80%|████████  | 160/200 [03:21<00:49,  1.25s/it]Dataset: data-is-better-together/10k_prompts_ranked:  80%|████████  | 161/200 [03:22<00:45,  1.18s/it]Dataset: data-is-better-together/10k_prompts_ranked:  81%|████████  | 162/200 [03:23<00:49,  1.30s/it]Dataset: data-is-better-together/10k_prompts_ranked:  82%|████████▏ | 163/200 [03:25<00:53,  1.44s/it]Dataset: data-is-better-together/10k_prompts_ranked:  82%|████████▏ | 164/200 [03:27<00:52,  1.46s/it]Dataset: data-is-better-together/10k_prompts_ranked:  82%|████████▎ | 165/200 [03:28<00:53,  1.52s/it]Dataset: data-is-better-together/10k_prompts_ranked:  83%|████████▎ | 166/200 [03:30<00:53,  1.57s/it]Dataset: data-is-better-together/10k_prompts_ranked:  84%|████████▎ | 167/200 [03:32<00:56,  1.72s/it]Dataset: data-is-better-together/10k_prompts_ranked:  84%|████████▍ | 168/200 [03:34<00:53,  1.68s/it]Dataset: data-is-better-together/10k_prompts_ranked:  84%|████████▍ | 169/200 [03:35<00:52,  1.69s/it]Dataset: data-is-better-together/10k_prompts_ranked:  85%|████████▌ | 170/200 [03:36<00:46,  1.55s/it]Dataset: data-is-better-together/10k_prompts_ranked:  86%|████████▌ | 171/200 [03:38<00:47,  1.65s/it]Dataset: data-is-better-together/10k_prompts_ranked:  86%|████████▌ | 172/200 [03:40<00:45,  1.64s/it]Dataset: data-is-better-together/10k_prompts_ranked:  86%|████████▋ | 173/200 [03:41<00:41,  1.54s/it]Dataset: data-is-better-together/10k_prompts_ranked:  87%|████████▋ | 174/200 [03:43<00:40,  1.56s/it]Dataset: data-is-better-together/10k_prompts_ranked:  88%|████████▊ | 175/200 [03:45<00:40,  1.60s/it]Dataset: data-is-better-together/10k_prompts_ranked:  88%|████████▊ | 176/200 [03:46<00:40,  1.69s/it]Dataset: data-is-better-together/10k_prompts_ranked:  88%|████████▊ | 177/200 [03:49<00:41,  1.80s/it]Dataset: data-is-better-together/10k_prompts_ranked:  89%|████████▉ | 178/200 [03:50<00:37,  1.71s/it]Dataset: data-is-better-together/10k_prompts_ranked:  90%|████████▉ | 179/200 [03:52<00:38,  1.82s/it]Dataset: data-is-better-together/10k_prompts_ranked:  90%|█████████ | 180/200 [03:53<00:32,  1.64s/it]Dataset: data-is-better-together/10k_prompts_ranked:  90%|█████████ | 181/200 [03:54<00:25,  1.33s/it]Dataset: data-is-better-together/10k_prompts_ranked:  91%|█████████ | 182/200 [03:55<00:23,  1.29s/it]Dataset: data-is-better-together/10k_prompts_ranked:  92%|█████████▏| 184/200 [03:57<00:18,  1.18s/it]Dataset: data-is-better-together/10k_prompts_ranked:  92%|█████████▎| 185/200 [03:59<00:19,  1.33s/it]Dataset: data-is-better-together/10k_prompts_ranked:  93%|█████████▎| 186/200 [04:01<00:19,  1.37s/it]Average accept_length over 52 steps: 3.9615
Average accept_length over 60 steps: 3.3000
Average accept_length over 54 steps: 3.7963
Average accept_length over 66 steps: 2.8939
Average accept_length over 42 steps: 3.5000
Average accept_length over 65 steps: 2.9692
Average accept_length over 46 steps: 4.5870
Average accept_length over 13 steps: 4.5385
Average accept_length over 42 steps: 5.3095
Average accept_length over 38 steps: 5.8158
Average accept_length over 57 steps: 3.5614
Average accept_length over 13 steps: 2.3846
Average accept_length over 30 steps: 2.3667
Average accept_length over 44 steps: 4.9773
Average accept_length over 46 steps: 4.6304
Average accept_length over 67 steps: 2.8955
Average accept_length over 52 steps: 3.9615
Average accept_length over 22 steps: 3.5909
Average accept_length over 61 steps: 3.2131
Average accept_length over 28 steps: 2.5000
Average accept_length over 50 steps: 3.0200
Average accept_length over 26 steps: 4.5769
Average accept_length over 59 steps: 3.4407
Average accept_length over 54 steps: 3.7778
Average accept_length over 35 steps: 3.4571
Average accept_length over 50 steps: 4.2600
Average accept_length over 48 steps: 4.3750
Average accept_length over 59 steps: 3.4407
Average accept_length over 59 steps: 3.2373
Average accept_length over 30 steps: 3.4667
Average accept_length over 58 steps: 3.5000
Average accept_length over 75 steps: 2.4533
Average accept_length over 52 steps: 4.0769
Average accept_length over 47 steps: 4.4894
Average accept_length over 55 steps: 3.7636
Average accept_length over 49 steps: 4.3061
Average accept_length over 47 steps: 4.4681
Average accept_length over 48 steps: 4.3958
Average accept_length over 32 steps: 0.9062
Average accept_length over 52 steps: 3.9808
Average accept_length over 32 steps: 3.7188
Average accept_length over 63 steps: 3.1111
Average accept_length over 47 steps: 3.0213
Average accept_length over 65 steps: 3.0615
Average accept_length over 43 steps: 5.0698
Average accept_length over 20 steps: 5.9500
Average accept_length over 20 steps: 3.4000
Average accept_length over 5 steps: 1.8000
Average accept_length over 53 steps: 3.9434
Average accept_length over 55 steps: 3.8182
Average accept_length over 59 steps: 3.4237
Average accept_length over 43 steps: 5.0465
Average accept_length over 44 steps: 3.0682
Average accept_length over 37 steps: 3.5946
Average accept_length over 10 steps: 1.5000
Average accept_length over 34 steps: 4.2941
Average accept_length over 59 steps: 3.3729
Average accept_length over 1 steps: 2.0000
Average accept_length over 41 steps: 2.9268
Average accept_length over 72 steps: 2.6111
Average accept_length over 37 steps: 5.0541
Average accept_length over 66 steps: 2.8939
Average accept_length over 62 steps: 3.2097
Average accept_length over 22 steps: 5.0000
Average accept_length over 42 steps: 3.0238
Average accept_length over 73 steps: 2.5342
Average accept_length over 41 steps: 5.4390
Average accept_length over 42 steps: 5.1190
Average accept_length over 6 steps: 3.8333
Average accept_length over 11 steps: 3.5455
Average accept_length over 5 steps: 5.4000
Average accept_length over 53 steps: 3.9623
Average accept_length over 51 steps: 3.7451
Average accept_length over 30 steps: 4.1000
Average accept_length over 55 steps: 3.7091
Average accept_length over 54 steps: 3.9074
Average accept_length over 58 steps: 3.4483
Average accept_length over 16 steps: 3.7500
Average accept_length over 70 steps: 2.6857
Average accept_length over 46 steps: 4.5870
Average accept_length over 55 steps: 3.8182
Average accept_length over 20 steps: 1.2000
Average accept_length over 20 steps: 3.7500
Average accept_length over 67 steps: 2.8657
Average accept_length over 35 steps: 3.4857
Average accept_length over 35 steps: 6.4286
Average accept_length over 59 steps: 3.4576
Average accept_length over 34 steps: 4.6471
Average accept_length over 57 steps: 3.5088
Average accept_length over 45 steps: 4.7556
Average accept_length over 24 steps: 3.7083
Average accept_length over 51 steps: 3.9804
Average accept_length over 56 steps: 3.7321
Average accept_length over 13 steps: 3.0000
Average accept_length over 53 steps: 3.9057
Average accept_length over 73 steps: 2.5479
Average accept_length over 38 steps: 3.2105
Average accept_length over 49 steps: 4.3878
Average accept_length over 45 steps: 3.3333
Average accept_length over 2 steps: 4.5000
Average accept_length over 42 steps: 5.2857
Average accept_length over 29 steps: 3.0345
Average accept_length over 29 steps: 2.7931
Average accept_length over 48 steps: 4.3750
Average accept_length over 257 steps: 0.0000
Average accept_length over 46 steps: 4.6522
Average accept_length over 60 steps: 3.3333
Average accept_length over 52 steps: 3.3077
Average accept_length over 13 steps: 3.3846
Average accept_length over 70 steps: 2.6714
Average accept_length over 50 steps: 4.2000
Average accept_length over 31 steps: 4.7419
Average accept_length over 75 steps: 2.4267
Average accept_length over 13 steps: 5.2308
Average accept_length over 15 steps: 3.0000
Average accept_length over 4 steps: 4.7500
Average accept_length over 32 steps: 1.5938
Average accept_length over 51 steps: 4.1765
Average accept_length over 54 steps: 3.7593
Average accept_length over 52 steps: 3.9423
Average accept_length over 44 steps: 4.8864
Average accept_length over 37 steps: 4.7568
Average accept_length over 57 steps: 3.6316
Average accept_length over 58 steps: 3.4483
Average accept_length over 22 steps: 3.0455
Average accept_length over 10 steps: 5.4000
Average accept_length over 42 steps: 5.2381
Average accept_length over 12 steps: 4.1667
Average accept_length over 57 steps: 3.5614
Average accept_length over 54 steps: 3.3333
Average accept_length over 54 steps: 3.8704
Average accept_length over 35 steps: 3.9143
Average accept_length over 60 steps: 3.2167
Average accept_length over 6 steps: 4.3333
Average accept_length over 9 steps: 4.4444
Average accept_length over 4 steps: 4.2500
Average accept_length over 30 steps: 4.7333
Average accept_length over 59 steps: 3.3729
Average accept_length over 50 steps: 4.2600
Average accept_length over 63 steps: 3.0952
Average accept_length over 42 steps: 5.1429
Average accept_length over 18 steps: 3.0000
Average accept_length over 25 steps: 3.2000
Average accept_length over 6 steps: 2.6667
Average accept_length over 44 steps: 4.9091
Average accept_length over 6 steps: 6.1667
Average accept_length over 49 steps: 4.2653
Average accept_length over 48 steps: 4.3958
Average accept_length over 47 steps: 4.5532
Average accept_length over 14 steps: 3.5000
Average accept_length over 35 steps: 6.5143
Average accept_length over 49 steps: 4.2857
Average accept_length over 28 steps: 2.5357
Average accept_length over 2 steps: 4.0000
Average accept_length over 3 steps: 3.6667
Average accept_length over 68 steps: 2.8529
Average accept_length over 43 steps: 4.9767
Average accept_length over 54 steps: 3.8889
Average accept_length over 33 steps: 6.0000
Average accept_length over 54 steps: 3.8148
Average accept_length over 34 steps: 3.4118
Average accept_length over 54 steps: 3.7963
Average accept_length over 53 steps: 3.9057
Average accept_length over 52 steps: 3.9615
Average accept_length over 56 steps: 3.6786
Average accept_length over 57 steps: 3.5263
Average accept_length over 71 steps: 2.6197
Average accept_length over 54 steps: 3.7593
Average accept_length over 58 steps: 3.4310
Average accept_length over 34 steps: 2.7647
Average accept_length over 65 steps: 3.0308
Average accept_length over 55 steps: 3.7091
Average accept_length over 45 steps: 4.8000
Average accept_length over 56 steps: 3.6071
Average accept_length over 58 steps: 3.4310
Average accept_length over 66 steps: 2.9394
Average accept_length over 70 steps: 2.7000
Average accept_length over 52 steps: 3.6923
Average accept_length over 71 steps: 2.6197
Average accept_length over 42 steps: 4.1429
Average accept_length over 20 steps: 4.7000
Average accept_length over 41 steps: 5.2927
Average accept_length over 2 steps: 6.0000
Average accept_length over 70 steps: 2.2000
Average accept_length over 61 steps: 3.2131
Average accept_length over 51 steps: 4.0784
Dataset: data-is-better-together/10k_prompts_ranked:  94%|█████████▎| 187/200 [04:02<00:16,  1.30s/it]Dataset: data-is-better-together/10k_prompts_ranked:  94%|█████████▍| 188/200 [04:02<00:13,  1.12s/it]Dataset: data-is-better-together/10k_prompts_ranked:  94%|█████████▍| 189/200 [04:03<00:12,  1.14s/it]Dataset: data-is-better-together/10k_prompts_ranked:  95%|█████████▌| 190/200 [04:05<00:11,  1.18s/it]Dataset: data-is-better-together/10k_prompts_ranked:  96%|█████████▌| 191/200 [04:06<00:11,  1.32s/it]Dataset: data-is-better-together/10k_prompts_ranked:  96%|█████████▌| 192/200 [04:07<00:08,  1.09s/it]Dataset: data-is-better-together/10k_prompts_ranked:  96%|█████████▋| 193/200 [04:09<00:08,  1.28s/it]Dataset: data-is-better-together/10k_prompts_ranked:  97%|█████████▋| 194/200 [04:10<00:08,  1.34s/it]Dataset: data-is-better-together/10k_prompts_ranked:  98%|█████████▊| 195/200 [04:11<00:06,  1.32s/it]Dataset: data-is-better-together/10k_prompts_ranked:  98%|█████████▊| 196/200 [04:12<00:04,  1.04s/it]Dataset: data-is-better-together/10k_prompts_ranked:  98%|█████████▊| 197/200 [04:13<00:03,  1.23s/it]Dataset: data-is-better-together/10k_prompts_ranked:  99%|█████████▉| 198/200 [04:15<00:02,  1.40s/it]Dataset: data-is-better-together/10k_prompts_ranked: 100%|█████████▉| 199/200 [04:17<00:01,  1.45s/it]Dataset: data-is-better-together/10k_prompts_ranked: 100%|██████████| 200/200 [04:18<00:00,  1.40s/it]Dataset: data-is-better-together/10k_prompts_ranked: 100%|██████████| 200/200 [04:18<00:00,  1.29s/it]
Average accept_length over 38 steps: 5.9211
Average accept_length over 22 steps: 1.7727
Average accept_length over 40 steps: 3.8250
Average accept_length over 44 steps: 4.8864
Average accept_length over 57 steps: 3.5789
Average accept_length over 17 steps: 4.3529
Average accept_length over 55 steps: 3.6727
Average accept_length over 51 steps: 4.1176
Average accept_length over 44 steps: 4.8636
Average accept_length over 12 steps: 4.4167
Average accept_length over 57 steps: 3.5263
Average accept_length over 62 steps: 3.1452
Average accept_length over 53 steps: 3.9623
Average accept_length over 43 steps: 5.1163
🔄 Completions saved to /home/ubuntu/sd/HandEval/outputs/eagleT0.0_vicuna-7b-v1.3/data-is-better-together/10k_prompts_ranked_completions.jsonl

✅  Results saved to /home/ubuntu/sd/HandEval/outputs/eagleT0.0_vicuna-7b-v1.3/data-is-better-together/10k_prompts_ranked_metrics.json
{
  "num_samples": 200,
  "total_time_sec": 258.6012923717499,
  "avg_time_per_sample_sec": 1.2930064618587493,
  "samples_file": "outputs/eagleT0.0_vicuna-7b-v1.3/data-is-better-together/10k_prompts_ranked_completions.jsonl"
}
