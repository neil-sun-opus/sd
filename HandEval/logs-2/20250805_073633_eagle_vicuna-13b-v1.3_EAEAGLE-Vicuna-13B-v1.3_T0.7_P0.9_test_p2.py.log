LlamaForCausalLM has generative capabilities, as `prepare_inputs_for_generation` is explicitly overwritten. However, it doesn't directly inherit from `GenerationMixin`. From 👉v4.50👈 onwards, `PreTrainedModel` will NOT inherit from `GenerationMixin`, and this model will lose the ability to call `generate` and other related functions.
  - If you're using `trust_remote_code=True`, you can get rid of this warning by loading the model with an auto class. See https://huggingface.co/docs/transformers/en/model_doc/auto#auto-classes
  - If you are the owner of the model architecture code, please modify your model class such that it inherits from `GenerationMixin` (after `PreTrainedModel`, otherwise you'll get an exception).
  - If you are not the owner of the model architecture class, please contact the model code owner to update it.
Loading EAGLE model from ../model_ckpt/EAGLE-Vicuna-13B-v1.3 with dtype float16
Base model: ../model_ckpt/vicuna-13b-v1.3
Loading checkpoint shards:   0%|          | 0/3 [00:00<?, ?it/s]Loading checkpoint shards:  33%|███▎      | 1/3 [00:01<00:03,  1.54s/it]Loading checkpoint shards:  67%|██████▋   | 2/3 [00:03<00:01,  1.53s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:04<00:00,  1.29s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:04<00:00,  1.35s/it]
/home/ubuntu/sd/EAGLE/eagle/model/ea_model.py:123: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  ea_layer_state_dict = torch.load(load_model_path,
You are using the default legacy behaviour of the <class 'transformers.models.llama.tokenization_llama.LlamaTokenizer'>. This is expected, and simply means that the `legacy` (previous) behavior will be used so nothing changes for you. If you want to use the new behaviour, set `legacy=False`. This should only be set if you understand what it means, and thoroughly read the reason why this was added as explained in https://github.com/huggingface/transformers/pull/24565 - if you loaded a llama tokenizer from a GGUF file you can ignore this message
/home/ubuntu/sd/EAGLE/eagle/model/cnets1.py:510: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  weights = torch.load(local_emb_path)
Dataset: data-is-better-together/10k_prompts_ranked:   0%|          | 0/200 [00:00<?, ?it/s]/home/ubuntu/miniconda3/envs/sd/lib/python3.10/site-packages/torch/_dynamo/eval_frame.py:632: UserWarning: torch.utils.checkpoint: the use_reentrant parameter should be passed explicitly. In version 2.5 we will raise an exception if use_reentrant is not passed. use_reentrant=False is recommended, but if you need to preserve the current default behavior, you can pass use_reentrant=True. Refer to docs for more details on the differences between the two variants.
  return fn(*args, **kwargs)
/home/ubuntu/miniconda3/envs/sd/lib/python3.10/site-packages/torch/utils/checkpoint.py:87: UserWarning: None of the inputs have requires_grad=True. Gradients will be None
  warnings.warn(
Dataset: data-is-better-together/10k_prompts_ranked:   0%|          | 1/200 [00:02<08:17,  2.50s/it]Dataset: data-is-better-together/10k_prompts_ranked:   1%|          | 2/200 [00:04<07:04,  2.14s/it]Dataset: data-is-better-together/10k_prompts_ranked:   2%|▏         | 3/200 [00:07<08:08,  2.48s/it]Dataset: data-is-better-together/10k_prompts_ranked:   2%|▏         | 4/200 [00:09<07:15,  2.22s/it]Dataset: data-is-better-together/10k_prompts_ranked:   2%|▎         | 5/200 [00:10<06:11,  1.90s/it]Dataset: data-is-better-together/10k_prompts_ranked:   3%|▎         | 6/200 [00:12<06:40,  2.06s/it]Dataset: data-is-better-together/10k_prompts_ranked:   4%|▎         | 7/200 [00:14<06:39,  2.07s/it]Dataset: data-is-better-together/10k_prompts_ranked:   4%|▍         | 8/200 [00:15<05:13,  1.63s/it]Dataset: data-is-better-together/10k_prompts_ranked:   4%|▍         | 9/200 [00:17<05:24,  1.70s/it]Dataset: data-is-better-together/10k_prompts_ranked:   5%|▌         | 10/200 [00:18<05:02,  1.59s/it]Dataset: data-is-better-together/10k_prompts_ranked:   6%|▌         | 11/200 [00:20<05:11,  1.65s/it]Dataset: data-is-better-together/10k_prompts_ranked:   6%|▌         | 12/200 [00:21<04:02,  1.29s/it]Dataset: data-is-better-together/10k_prompts_ranked:   6%|▋         | 13/200 [00:22<04:29,  1.44s/it]Dataset: data-is-better-together/10k_prompts_ranked:   7%|▋         | 14/200 [00:24<04:32,  1.46s/it]Dataset: data-is-better-together/10k_prompts_ranked:   8%|▊         | 15/200 [00:25<04:32,  1.47s/it]Dataset: data-is-better-together/10k_prompts_ranked:   8%|▊         | 16/200 [00:27<05:07,  1.67s/it]Dataset: data-is-better-together/10k_prompts_ranked:   8%|▊         | 17/200 [00:29<05:14,  1.72s/it]Dataset: data-is-better-together/10k_prompts_ranked:   9%|▉         | 18/200 [00:30<04:16,  1.41s/it]Dataset: data-is-better-together/10k_prompts_ranked:  10%|▉         | 19/200 [00:31<04:17,  1.42s/it]Dataset: data-is-better-together/10k_prompts_ranked:  10%|█         | 20/200 [00:32<03:39,  1.22s/it]Dataset: data-is-better-together/10k_prompts_ranked:  10%|█         | 21/200 [00:34<03:43,  1.25s/it]Dataset: data-is-better-together/10k_prompts_ranked:  11%|█         | 22/200 [00:35<03:57,  1.34s/it]Dataset: data-is-better-together/10k_prompts_ranked:  12%|█▏        | 23/200 [00:37<04:48,  1.63s/it]Dataset: data-is-better-together/10k_prompts_ranked:  12%|█▏        | 24/200 [00:40<05:19,  1.81s/it]Dataset: data-is-better-together/10k_prompts_ranked:  12%|█▎        | 25/200 [00:41<05:21,  1.84s/it]Dataset: data-is-better-together/10k_prompts_ranked:  13%|█▎        | 26/200 [00:43<05:16,  1.82s/it]Dataset: data-is-better-together/10k_prompts_ranked:  14%|█▎        | 27/200 [00:45<05:07,  1.78s/it]Dataset: data-is-better-together/10k_prompts_ranked:  14%|█▍        | 28/200 [00:47<05:13,  1.83s/it]Dataset: data-is-better-together/10k_prompts_ranked:  14%|█▍        | 29/200 [00:49<05:22,  1.89s/it]Dataset: data-is-better-together/10k_prompts_ranked:  15%|█▌        | 30/200 [00:50<04:36,  1.63s/it]Dataset: data-is-better-together/10k_prompts_ranked:  16%|█▌        | 31/200 [00:51<04:31,  1.61s/it]Dataset: data-is-better-together/10k_prompts_ranked:  16%|█▌        | 32/200 [00:54<05:29,  1.96s/it]Dataset: data-is-better-together/10k_prompts_ranked:  16%|█▋        | 33/200 [00:56<05:29,  1.97s/it]Dataset: data-is-better-together/10k_prompts_ranked:  17%|█▋        | 34/200 [00:58<05:14,  1.89s/it]Dataset: data-is-better-together/10k_prompts_ranked:  18%|█▊        | 35/200 [01:00<05:24,  1.97s/it]Dataset: data-is-better-together/10k_prompts_ranked:  18%|█▊        | 36/200 [01:02<05:28,  2.00s/it]Dataset: data-is-better-together/10k_prompts_ranked:  18%|█▊        | 37/200 [01:04<05:05,  1.88s/it]Dataset: data-is-better-together/10k_prompts_ranked:  19%|█▉        | 38/200 [01:06<05:07,  1.90s/it]Dataset: data-is-better-together/10k_prompts_ranked:  20%|█▉        | 39/200 [01:07<04:28,  1.67s/it]Dataset: data-is-better-together/10k_prompts_ranked:  20%|██        | 40/200 [01:09<04:41,  1.76s/it]Dataset: data-is-better-together/10k_prompts_ranked:  20%|██        | 41/200 [01:09<03:43,  1.40s/it]Dataset: data-is-better-together/10k_prompts_ranked:  21%|██        | 42/200 [01:12<04:22,  1.66s/it]Dataset: data-is-better-together/10k_prompts_ranked:  22%|██▏       | 43/200 [01:13<03:59,  1.53s/it]Dataset: data-is-better-together/10k_prompts_ranked:  22%|██▏       | 44/200 [01:15<04:30,  1.74s/it]Dataset: data-is-better-together/10k_prompts_ranked:  22%|██▎       | 45/200 [01:17<04:33,  1.76s/it]Dataset: data-is-better-together/10k_prompts_ranked:  23%|██▎       | 46/200 [01:19<04:28,  1.74s/it]Dataset: data-is-better-together/10k_prompts_ranked:  24%|██▎       | 47/200 [01:19<03:31,  1.38s/it]Dataset: data-is-better-together/10k_prompts_ranked:  24%|██▍       | 48/200 [01:20<02:49,  1.12s/it]Dataset: data-is-better-together/10k_prompts_ranked:  24%|██▍       | 49/200 [01:21<03:16,  1.30s/it]Dataset: data-is-better-together/10k_prompts_ranked:  25%|██▌       | 50/200 [01:24<04:00,  1.60s/it]Dataset: data-is-better-together/10k_prompts_ranked:  26%|██▌       | 51/200 [01:24<03:08,  1.27s/it]Dataset: data-is-better-together/10k_prompts_ranked:  26%|██▌       | 52/200 [01:26<03:16,  1.33s/it]Dataset: data-is-better-together/10k_prompts_ranked:  26%|██▋       | 53/200 [01:27<03:10,  1.29s/it]Dataset: data-is-better-together/10k_prompts_ranked:  27%|██▋       | 54/200 [01:28<02:52,  1.18s/it]Dataset: data-is-better-together/10k_prompts_ranked:  28%|██▊       | 55/200 [01:28<02:16,  1.06it/s]Dataset: data-is-better-together/10k_prompts_ranked:  28%|██▊       | 56/200 [01:30<02:35,  1.08s/it]Dataset: data-is-better-together/10k_prompts_ranked:  28%|██▊       | 57/200 [01:32<03:35,  1.51s/it]Dataset: data-is-better-together/10k_prompts_ranked:  29%|██▉       | 58/200 [01:32<02:34,  1.09s/it]Dataset: data-is-better-together/10k_prompts_ranked:  30%|██▉       | 59/200 [01:34<03:13,  1.38s/it]Dataset: data-is-better-together/10k_prompts_ranked:  30%|███       | 60/200 [01:37<03:53,  1.67s/it]Dataset: data-is-better-together/10k_prompts_ranked:  30%|███       | 61/200 [01:38<03:29,  1.51s/it]Dataset: data-is-better-together/10k_prompts_ranked:  31%|███       | 62/200 [01:40<04:01,  1.75s/it]Dataset: data-is-better-together/10k_prompts_ranked:  32%|███▏      | 63/200 [01:42<04:12,  1.84s/it]Dataset: data-is-better-together/10k_prompts_ranked:  32%|███▏      | 64/200 [01:43<03:27,  1.53s/it]Dataset: data-is-better-together/10k_prompts_ranked:  32%|███▎      | 65/200 [01:45<04:00,  1.78s/it]Dataset: data-is-better-together/10k_prompts_ranked:  33%|███▎      | 66/200 [01:48<04:40,  2.09s/it]Dataset: data-is-better-together/10k_prompts_ranked:  34%|███▎      | 67/200 [01:50<04:21,  1.97s/it]Dataset: data-is-better-together/10k_prompts_ranked:  34%|███▍      | 68/200 [01:51<03:58,  1.80s/it]Dataset: data-is-better-together/10k_prompts_ranked:  34%|███▍      | 69/200 [01:51<02:56,  1.35s/it]Dataset: data-is-better-together/10k_prompts_ranked:  35%|███▌      | 70/200 [01:52<02:13,  1.03s/it]Dataset: data-is-better-together/10k_prompts_ranked:  36%|███▌      | 71/200 [01:52<01:41,  1.27it/s]Dataset: data-is-better-together/10k_prompts_ranked:  36%|███▌      | 72/200 [01:54<02:28,  1.16s/it]Dataset: data-is-better-together/10k_prompts_ranked:  36%|███▋      | 73/200 [01:56<02:50,  1.34s/it]Dataset: data-is-better-together/10k_prompts_ranked:  37%|███▋      | 74/200 [01:58<03:10,  1.51s/it]Dataset: data-is-better-together/10k_prompts_ranked:  38%|███▊      | 75/200 [02:00<03:37,  1.74s/it]Dataset: data-is-better-together/10k_prompts_ranked:  38%|███▊      | 76/200 [02:02<03:36,  1.74s/it]Dataset: data-is-better-together/10k_prompts_ranked:  38%|███▊      | 77/200 [02:04<03:48,  1.86s/it]Dataset: data-is-better-together/10k_prompts_ranked:  39%|███▉      | 78/200 [02:04<02:42,  1.33s/it]Dataset: data-is-better-together/10k_prompts_ranked:  40%|███▉      | 79/200 [02:06<03:22,  1.67s/it]Dataset: data-is-better-together/10k_prompts_ranked:  40%|████      | 80/200 [02:08<03:22,  1.69s/it]Dataset: data-is-better-together/10k_prompts_ranked:  40%|████      | 81/200 [02:10<03:38,  1.83s/it]Dataset: data-is-better-together/10k_prompts_ranked:  41%|████      | 82/200 [02:12<03:27,  1.76s/it]Dataset: data-is-better-together/10k_prompts_ranked:  42%|████▏     | 83/200 [02:13<03:05,  1.58s/it]Dataset: data-is-better-together/10k_prompts_ranked:  42%|████▏     | 84/200 [02:15<03:22,  1.75s/it]Dataset: data-is-better-together/10k_prompts_ranked:  42%|████▎     | 85/200 [02:17<03:27,  1.81s/it]Dataset: data-is-better-together/10k_prompts_ranked:  43%|████▎     | 86/200 [02:19<03:22,  1.77s/it]Dataset: data-is-better-together/10k_prompts_ranked:  44%|████▎     | 87/200 [02:19<02:41,  1.43s/it]Dataset: data-is-better-together/10k_prompts_ranked:  44%|████▍     | 88/200 [02:21<02:49,  1.52s/it]Dataset: data-is-better-together/10k_prompts_ranked:  44%|████▍     | 89/200 [02:23<03:00,  1.63s/it]Dataset: data-is-better-together/10k_prompts_ranked:  45%|████▌     | 90/200 [02:25<03:05,  1.68s/it]Dataset: data-is-better-together/10k_prompts_ranked:  46%|████▌     | 91/200 [02:26<02:40,  1.47s/it]Dataset: data-is-better-together/10k_prompts_ranked:  46%|████▌     | 92/200 [02:28<02:45,  1.53s/it]Dataset: data-is-better-together/10k_prompts_ranked:  46%|████▋     | 93/200 [02:29<02:50,  1.60s/it]Dataset: data-is-better-together/10k_prompts_ranked:  47%|████▋     | 94/200 [02:30<02:28,  1.40s/it]Dataset: data-is-better-together/10k_prompts_ranked:  48%|████▊     | 95/200 [02:31<02:08,  1.23s/it]Dataset: data-is-better-together/10k_prompts_ranked:  48%|████▊     | 96/200 [02:33<02:41,  1.55s/it]Dataset: data-is-better-together/10k_prompts_ranked:  48%|████▊     | 97/200 [02:34<02:15,  1.32s/it]Dataset: data-is-better-together/10k_prompts_ranked:  49%|████▉     | 98/200 [02:36<02:28,  1.45s/it]Dataset: data-is-better-together/10k_prompts_ranked:  50%|████▉     | 99/200 [02:38<02:47,  1.66s/it]Dataset: data-is-better-together/10k_prompts_ranked:  50%|█████     | 100/200 [02:38<02:00,  1.20s/it]Dataset: data-is-better-together/10k_prompts_ranked:  50%|█████     | 101/200 [02:39<01:54,  1.16s/it]Dataset: data-is-better-together/10k_prompts_ranked:  51%|█████     | 102/200 [02:41<02:13,  1.36s/it]Dataset: data-is-better-together/10k_prompts_ranked:  52%|█████▏    | 103/200 [02:43<02:31,  1.56s/it]Dataset: data-is-better-together/10k_prompts_ranked:  52%|█████▏    | 104/200 [02:45<02:34,  1.61s/it]Token indices sequence length is longer than the specified maximum sequence length for this model (3654 > 2048). Running this sequence through the model will result in indexing errors
Dataset: data-is-better-together/10k_prompts_ranked:  52%|█████▎    | 105/200 [02:46<02:09,  1.36s/it]Dataset: data-is-better-together/10k_prompts_ranked:  53%|█████▎    | 106/200 [02:47<02:14,  1.43s/it]Dataset: data-is-better-together/10k_prompts_ranked:  54%|█████▎    | 107/200 [02:49<02:20,  1.52s/it]Dataset: data-is-better-together/10k_prompts_ranked:  54%|█████▍    | 108/200 [02:51<02:23,  1.56s/it]Dataset: data-is-better-together/10k_prompts_ranked:  55%|█████▍    | 109/200 [02:51<01:56,  1.28s/it]Dataset: data-is-better-together/10k_prompts_ranked:  55%|█████▌    | 110/200 [02:54<02:23,  1.59s/it]Dataset: data-is-better-together/10k_prompts_ranked:  56%|█████▌    | 111/200 [02:55<02:25,  1.64s/it]Dataset: data-is-better-together/10k_prompts_ranked:  56%|█████▌    | 112/200 [02:57<02:16,  1.55s/it]Dataset: data-is-better-together/10k_prompts_ranked:  56%|█████▋    | 113/200 [02:59<02:40,  1.85s/it]Dataset: data-is-better-together/10k_prompts_ranked:  57%|█████▋    | 114/200 [03:00<02:01,  1.41s/it]Dataset: data-is-better-together/10k_prompts_ranked:  57%|█████▊    | 115/200 [03:00<01:34,  1.11s/it]Dataset: data-is-better-together/10k_prompts_ranked:  58%|█████▊    | 116/200 [03:00<01:10,  1.19it/s]Dataset: data-is-better-together/10k_prompts_ranked:  58%|█████▊    | 117/200 [03:02<01:25,  1.03s/it]Dataset: data-is-better-together/10k_prompts_ranked:  59%|█████▉    | 118/200 [03:02<01:06,  1.24it/s]Dataset: data-is-better-together/10k_prompts_ranked:  60%|█████▉    | 119/200 [03:04<01:25,  1.05s/it]Dataset: data-is-better-together/10k_prompts_ranked:  60%|██████    | 120/200 [03:06<01:53,  1.42s/it]Dataset: data-is-better-together/10k_prompts_ranked:  60%|██████    | 121/200 [03:08<01:59,  1.52s/it]Dataset: data-is-better-together/10k_prompts_ranked:  61%|██████    | 122/200 [03:09<02:02,  1.57s/it]Dataset: data-is-better-together/10k_prompts_ranked:  62%|██████▏   | 123/200 [03:12<02:17,  1.79s/it]Dataset: data-is-better-together/10k_prompts_ranked:  62%|██████▏   | 124/200 [03:12<01:52,  1.47s/it]Dataset: data-is-better-together/10k_prompts_ranked:  62%|██████▎   | 125/200 [03:13<01:27,  1.17s/it]Dataset: data-is-better-together/10k_prompts_ranked:  63%|██████▎   | 126/200 [03:13<01:10,  1.06it/s]Dataset: data-is-better-together/10k_prompts_ranked:  64%|██████▎   | 127/200 [03:15<01:28,  1.22s/it]Dataset: data-is-better-together/10k_prompts_ranked:  64%|██████▍   | 128/200 [03:15<01:04,  1.11it/s]Dataset: data-is-better-together/10k_prompts_ranked:  64%|██████▍   | 129/200 [03:17<01:29,  1.26s/it]Dataset: data-is-better-together/10k_prompts_ranked:  65%|██████▌   | 130/200 [03:19<01:38,  1.41s/it]Dataset: data-is-better-together/10k_prompts_ranked:  66%|██████▌   | 131/200 [03:21<01:56,  1.68s/it]Dataset: data-is-better-together/10k_prompts_ranked:  66%|██████▌   | 132/200 [03:23<01:45,  1.56s/it]Dataset: data-is-better-together/10k_prompts_ranked:  66%|██████▋   | 133/200 [03:25<02:04,  1.86s/it]Dataset: data-is-better-together/10k_prompts_ranked:  67%|██████▋   | 134/200 [03:25<01:31,  1.39s/it]Dataset: data-is-better-together/10k_prompts_ranked:  68%|██████▊   | 135/200 [03:26<01:10,  1.09s/it]Dataset: data-is-better-together/10k_prompts_ranked:  68%|██████▊   | 136/200 [03:26<00:54,  1.16it/s]Dataset: data-is-better-together/10k_prompts_ranked:  68%|██████▊   | 137/200 [03:28<01:10,  1.13s/it]Dataset: data-is-better-together/10k_prompts_ranked:  69%|██████▉   | 138/200 [03:30<01:25,  1.38s/it]Dataset: data-is-better-together/10k_prompts_ranked:  70%|██████▉   | 139/200 [03:32<01:43,  1.70s/it]Dataset: data-is-better-together/10k_prompts_ranked:  70%|███████   | 140/200 [03:35<01:49,  1.83s/it]Dataset: data-is-better-together/10k_prompts_ranked:  70%|███████   | 141/200 [03:36<01:43,  1.76s/it]Dataset: data-is-better-together/10k_prompts_ranked:  71%|███████   | 142/200 [03:37<01:34,  1.62s/it]Dataset: data-is-better-together/10k_prompts_ranked:  72%|███████▏  | 143/200 [03:38<01:19,  1.39s/it]Dataset: data-is-better-together/10k_prompts_ranked:  72%|███████▏  | 144/200 [03:39<00:59,  1.06s/it]Dataset: data-is-better-together/10k_prompts_ranked:  72%|███████▎  | 145/200 [03:40<01:09,  1.27s/it]Dataset: data-is-better-together/10k_prompts_ranked:  73%|███████▎  | 146/200 [03:40<00:50,  1.06it/s]Dataset: data-is-better-together/10k_prompts_ranked:  74%|███████▎  | 147/200 [03:42<01:06,  1.26s/it]Dataset: data-is-better-together/10k_prompts_ranked:  74%|███████▍  | 148/200 [03:44<01:13,  1.41s/it]Dataset: data-is-better-together/10k_prompts_ranked:  74%|███████▍  | 149/200 [03:46<01:19,  1.55s/it]Dataset: data-is-better-together/10k_prompts_ranked:  75%|███████▌  | 150/200 [03:47<01:01,  1.23s/it]Dataset: data-is-better-together/10k_prompts_ranked:  76%|███████▌  | 151/200 [03:48<01:09,  1.43s/it]Dataset: data-is-better-together/10k_prompts_ranked:  76%|███████▌  | 152/200 [03:50<01:15,  1.56s/it]Dataset: data-is-better-together/10k_prompts_ranked:  76%|███████▋  | 153/200 [03:51<01:02,  1.34s/it]Dataset: data-is-better-together/10k_prompts_ranked:  77%|███████▋  | 154/200 [03:53<01:10,  1.54s/it]Dataset: data-is-better-together/10k_prompts_ranked:  78%|███████▊  | 155/200 [03:53<00:50,  1.12s/it]Dataset: data-is-better-together/10k_prompts_ranked:  78%|███████▊  | 156/200 [03:56<01:05,  1.50s/it]Dataset: data-is-better-together/10k_prompts_ranked:  78%|███████▊  | 157/200 [03:57<01:06,  1.55s/it]Dataset: data-is-better-together/10k_prompts_ranked:  79%|███████▉  | 158/200 [03:59<01:09,  1.66s/it]Dataset: data-is-better-together/10k_prompts_ranked:  80%|███████▉  | 159/200 [04:01<01:03,  1.55s/it]Dataset: data-is-better-together/10k_prompts_ranked:  80%|████████  | 160/200 [04:02<01:03,  1.58s/it]Dataset: data-is-better-together/10k_prompts_ranked:  80%|████████  | 161/200 [04:04<01:06,  1.70s/it]Dataset: data-is-better-together/10k_prompts_ranked:  81%|████████  | 162/200 [04:06<01:06,  1.75s/it]Dataset: data-is-better-together/10k_prompts_ranked:  82%|████████▏ | 163/200 [04:07<00:52,  1.42s/it]Dataset: data-is-better-together/10k_prompts_ranked:  82%|████████▏ | 164/200 [04:09<00:56,  1.56s/it]Dataset: data-is-better-together/10k_prompts_ranked:  82%|████████▎ | 165/200 [04:10<00:56,  1.61s/it]Dataset: data-is-better-together/10k_prompts_ranked:  83%|████████▎ | 166/200 [04:13<01:01,  1.81s/it]Dataset: data-is-better-together/10k_prompts_ranked:  84%|████████▎ | 167/200 [04:15<01:07,  2.04s/it]Dataset: data-is-better-together/10k_prompts_ranked:  84%|████████▍ | 168/200 [04:17<01:02,  1.95s/it]Dataset: data-is-better-together/10k_prompts_ranked:  84%|████████▍ | 169/200 [04:19<01:01,  1.99s/it]Dataset: data-is-better-together/10k_prompts_ranked:  85%|████████▌ | 170/200 [04:21<00:54,  1.83s/it]Dataset: data-is-better-together/10k_prompts_ranked:  86%|████████▌ | 171/200 [04:23<01:01,  2.13s/it]Dataset: data-is-better-together/10k_prompts_ranked:  86%|████████▌ | 172/200 [04:25<00:58,  2.09s/it]Dataset: data-is-better-together/10k_prompts_ranked:  86%|████████▋ | 173/200 [04:27<00:55,  2.07s/it]Dataset: data-is-better-together/10k_prompts_ranked:  87%|████████▋ | 174/200 [04:29<00:52,  2.02s/it]Dataset: data-is-better-together/10k_prompts_ranked:  88%|████████▊ | 175/200 [04:31<00:51,  2.06s/it]Dataset: data-is-better-together/10k_prompts_ranked:  88%|████████▊ | 176/200 [04:34<00:50,  2.09s/it]Dataset: data-is-better-together/10k_prompts_ranked:  88%|████████▊ | 177/200 [04:36<00:49,  2.13s/it]Dataset: data-is-better-together/10k_prompts_ranked:  89%|████████▉ | 178/200 [04:37<00:38,  1.77s/it]Dataset: data-is-better-together/10k_prompts_ranked:  90%|████████▉ | 179/200 [04:39<00:41,  1.97s/it]Dataset: data-is-better-together/10k_prompts_ranked:  90%|█████████ | 180/200 [04:41<00:36,  1.83s/it]Dataset: data-is-better-together/10k_prompts_ranked:  90%|█████████ | 181/200 [04:41<00:28,  1.48s/it]Dataset: data-is-better-together/10k_prompts_ranked:  91%|█████████ | 182/200 [04:43<00:27,  1.53s/it]Dataset: data-is-better-together/10k_prompts_ranked:  92%|█████████▏| 183/200 [04:44<00:21,  1.28s/it]Dataset: data-is-better-together/10k_prompts_ranked:  92%|█████████▏| 184/200 [04:45<00:20,  1.29s/it]Dataset: data-is-better-together/10k_prompts_ranked:  92%|█████████▎| 185/200 [04:47<00:23,  1.54s/it]Dataset: data-is-better-together/10k_prompts_ranked:  93%|█████████▎| 186/200 [04:49<00:23,  1.70s/it]Average accept_length over 55 steps: 3.6909
Average accept_length over 54 steps: 3.7778
Average accept_length over 83 steps: 2.1687
Average accept_length over 52 steps: 2.8846
Average accept_length over 38 steps: 3.8947
Average accept_length over 66 steps: 2.9394
Average accept_length over 58 steps: 3.4828
Average accept_length over 19 steps: 4.4737
Average accept_length over 52 steps: 4.0192
Average accept_length over 37 steps: 5.9730
Average accept_length over 51 steps: 4.1176
Average accept_length over 13 steps: 2.5385
Average accept_length over 51 steps: 1.9608
Average accept_length over 43 steps: 5.0930
Average accept_length over 41 steps: 5.2927
Average accept_length over 61 steps: 3.2131
Average accept_length over 53 steps: 3.9245
Average accept_length over 19 steps: 4.4211
Average accept_length over 31 steps: 3.0968
Average accept_length over 20 steps: 3.1500
Average accept_length over 37 steps: 2.6486
Average accept_length over 44 steps: 4.4545
Average accept_length over 67 steps: 2.8507
Average accept_length over 65 steps: 2.9692
Average accept_length over 54 steps: 3.7778
Average accept_length over 50 steps: 4.2000
Average accept_length over 47 steps: 4.6383
Average accept_length over 55 steps: 3.7273
Average accept_length over 58 steps: 3.4310
Average accept_length over 28 steps: 3.8214
Average accept_length over 44 steps: 3.1591
Average accept_length over 81 steps: 2.1728
Average accept_length over 56 steps: 3.6786
Average accept_length over 48 steps: 4.4167
Average accept_length over 60 steps: 3.3500
Average accept_length over 59 steps: 3.3729
Average accept_length over 44 steps: 4.8409
Average accept_length over 55 steps: 3.6727
Average accept_length over 32 steps: 1.0312
Average accept_length over 56 steps: 3.5893
Average accept_length over 16 steps: 3.5000
Average accept_length over 64 steps: 3.0625
Average accept_length over 34 steps: 2.6176
Average accept_length over 63 steps: 3.1587
Average accept_length over 52 steps: 4.0385
Average accept_length over 47 steps: 4.5106
Average accept_length over 15 steps: 2.3333
Average accept_length over 13 steps: 4.4615
Average accept_length over 49 steps: 4.3878
Average accept_length over 66 steps: 2.9242
Average accept_length over 13 steps: 3.2308
Average accept_length over 41 steps: 5.4634
Average accept_length over 34 steps: 2.9706
Average accept_length over 26 steps: 3.5385
Average accept_length over 10 steps: 1.6000
Average accept_length over 39 steps: 4.1282
Average accept_length over 71 steps: 2.6338
Average accept_length over 2 steps: 1.0000
Average accept_length over 58 steps: 3.4483
Average accept_length over 69 steps: 2.7391
Average accept_length over 32 steps: 4.5312
Average accept_length over 68 steps: 2.8088
Average accept_length over 61 steps: 3.2131
Average accept_length over 22 steps: 4.6818
Average accept_length over 69 steps: 2.7246
Average accept_length over 72 steps: 2.6389
Average accept_length over 47 steps: 4.4894
Average accept_length over 41 steps: 5.4146
Average accept_length over 7 steps: 5.5714
Average accept_length over 7 steps: 3.2857
Average accept_length over 6 steps: 3.8333
Average accept_length over 58 steps: 3.4828
Average accept_length over 51 steps: 4.0784
Average accept_length over 55 steps: 3.7273
Average accept_length over 65 steps: 2.9692
Average accept_length over 51 steps: 4.0392
Average accept_length over 61 steps: 3.2787
Average accept_length over 2 steps: 2.5000
Average accept_length over 72 steps: 2.5694
Average accept_length over 49 steps: 4.3673
Average accept_length over 63 steps: 3.1111
Average accept_length over 46 steps: 2.9565
Average accept_length over 34 steps: 2.8824
Average accept_length over 61 steps: 3.2295
Average accept_length over 57 steps: 2.9649
Average accept_length over 46 steps: 4.6522
Average accept_length over 17 steps: 5.0000
Average accept_length over 48 steps: 4.3958
Average accept_length over 54 steps: 3.7778
Average accept_length over 52 steps: 3.9615
Average accept_length over 27 steps: 4.9630
Average accept_length over 48 steps: 3.3750
Average accept_length over 50 steps: 4.1600
Average accept_length over 27 steps: 3.2963
Average accept_length over 23 steps: 3.8261
Average accept_length over 65 steps: 2.6615
Average accept_length over 21 steps: 3.2857
Average accept_length over 48 steps: 4.4375
Average accept_length over 59 steps: 3.4068
Average accept_length over 3 steps: 3.6667
Average accept_length over 29 steps: 3.8276
Average accept_length over 50 steps: 4.2000
Average accept_length over 57 steps: 3.1579
Average accept_length over 47 steps: 4.5106
Average accept_length over 1 steps: 0.0000
Average accept_length over 44 steps: 5.0227
Average accept_length over 44 steps: 4.8864
Average accept_length over 48 steps: 3.1667
Average accept_length over 17 steps: 3.8824
Average accept_length over 66 steps: 2.9242
Average accept_length over 50 steps: 4.1600
Average accept_length over 37 steps: 5.9459
Average accept_length over 73 steps: 2.5479
Average accept_length over 10 steps: 6.1000
Average accept_length over 11 steps: 2.7273
Average accept_length over 5 steps: 3.4000
Average accept_length over 43 steps: 1.6512
Average accept_length over 7 steps: 4.2857
Average accept_length over 46 steps: 4.6304
Average accept_length over 64 steps: 3.0781
Average accept_length over 49 steps: 4.2857
Average accept_length over 48 steps: 4.3542
Average accept_length over 65 steps: 2.9538
Average accept_length over 20 steps: 3.7000
Average accept_length over 12 steps: 2.1667
Average accept_length over 11 steps: 3.4545
Average accept_length over 51 steps: 4.1961
Average accept_length over 4 steps: 4.7500
Average accept_length over 59 steps: 3.3559
Average accept_length over 50 steps: 3.1600
Average accept_length over 66 steps: 3.0000
Average accept_length over 35 steps: 3.8857
Average accept_length over 73 steps: 2.5342
Average accept_length over 7 steps: 4.5714
Average accept_length over 10 steps: 4.5000
Average accept_length over 8 steps: 3.2500
Average accept_length over 49 steps: 3.3265
Average accept_length over 55 steps: 3.8182
Average accept_length over 69 steps: 2.8116
Average accept_length over 60 steps: 2.6500
Average accept_length over 45 steps: 4.7556
Average accept_length over 36 steps: 4.2500
Average accept_length over 23 steps: 3.7391
Average accept_length over 7 steps: 4.0000
Average accept_length over 49 steps: 4.2653
Average accept_length over 4 steps: 6.5000
Average accept_length over 57 steps: 3.5088
Average accept_length over 48 steps: 4.4167
Average accept_length over 53 steps: 3.8491
Average accept_length over 12 steps: 2.0833
Average accept_length over 52 steps: 3.4808
Average accept_length over 53 steps: 3.8868
Average accept_length over 22 steps: 2.0909
Average accept_length over 57 steps: 3.5263
Average accept_length over 3 steps: 3.6667
Average accept_length over 67 steps: 2.8507
Average accept_length over 45 steps: 4.7111
Average accept_length over 54 steps: 3.7593
Average accept_length over 36 steps: 6.1667
Average accept_length over 47 steps: 4.4894
Average accept_length over 55 steps: 3.3818
Average accept_length over 52 steps: 3.9615
Average accept_length over 12 steps: 5.2500
Average accept_length over 53 steps: 3.4151
Average accept_length over 48 steps: 4.3542
Average accept_length over 65 steps: 3.0308
Average accept_length over 73 steps: 2.5753
Average accept_length over 49 steps: 4.2857
Average accept_length over 58 steps: 3.5345
Average accept_length over 30 steps: 3.6000
Average accept_length over 81 steps: 2.2346
Average accept_length over 55 steps: 3.6727
Average accept_length over 57 steps: 3.5439
Average accept_length over 53 steps: 3.9245
Average accept_length over 61 steps: 3.2295
Average accept_length over 61 steps: 3.2951
Average accept_length over 62 steps: 3.1774
Average accept_length over 26 steps: 2.8846
Average accept_length over 69 steps: 2.7246
Average accept_length over 42 steps: 3.6667
Average accept_length over 18 steps: 4.7778
Average accept_length over 46 steps: 4.7174
Average accept_length over 19 steps: 2.6842
Average accept_length over 37 steps: 1.8378
Average accept_length over 60 steps: 3.3500
Average accept_length over 57 steps: 3.6140
Dataset: data-is-better-together/10k_prompts_ranked:  94%|█████████▎| 187/200 [04:51<00:21,  1.68s/it]Dataset: data-is-better-together/10k_prompts_ranked:  94%|█████████▍| 188/200 [04:52<00:18,  1.53s/it]Dataset: data-is-better-together/10k_prompts_ranked:  94%|█████████▍| 189/200 [04:54<00:17,  1.55s/it]Dataset: data-is-better-together/10k_prompts_ranked:  95%|█████████▌| 190/200 [04:55<00:15,  1.56s/it]