LlamaForCausalLM has generative capabilities, as `prepare_inputs_for_generation` is explicitly overwritten. However, it doesn't directly inherit from `GenerationMixin`. From 👉v4.50👈 onwards, `PreTrainedModel` will NOT inherit from `GenerationMixin`, and this model will lose the ability to call `generate` and other related functions.
  - If you're using `trust_remote_code=True`, you can get rid of this warning by loading the model with an auto class. See https://huggingface.co/docs/transformers/en/model_doc/auto#auto-classes
  - If you are the owner of the model architecture code, please modify your model class such that it inherits from `GenerationMixin` (after `PreTrainedModel`, otherwise you'll get an exception).
  - If you are not the owner of the model architecture class, please contact the model code owner to update it.
Loading EAGLE model from ../model_ckpt/EAGLE-Vicuna-7B-v1.3 with dtype float16
Base model: ../model_ckpt/vicuna-7b-v1.3
Loading checkpoint shards:   0%|          | 0/2 [00:00<?, ?it/s]Loading checkpoint shards:  50%|█████     | 1/2 [00:01<00:01,  1.58s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:02<00:00,  1.01s/it]Loading checkpoint shards: 100%|██████████| 2/2 [00:02<00:00,  1.09s/it]
/home/ubuntu/sd/EAGLE/eagle/model/ea_model.py:123: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  ea_layer_state_dict = torch.load(load_model_path,
You are using the default legacy behaviour of the <class 'transformers.models.llama.tokenization_llama.LlamaTokenizer'>. This is expected, and simply means that the `legacy` (previous) behavior will be used so nothing changes for you. If you want to use the new behaviour, set `legacy=False`. This should only be set if you understand what it means, and thoroughly read the reason why this was added as explained in https://github.com/huggingface/transformers/pull/24565 - if you loaded a llama tokenizer from a GGUF file you can ignore this message
/home/ubuntu/sd/EAGLE/eagle/model/cnets1.py:510: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  weights = torch.load(local_emb_path)
Dataset: data-is-better-together/10k_prompts_ranked:   0%|          | 0/200 [00:00<?, ?it/s]/home/ubuntu/miniconda3/envs/sd/lib/python3.10/site-packages/torch/_dynamo/eval_frame.py:632: UserWarning: torch.utils.checkpoint: the use_reentrant parameter should be passed explicitly. In version 2.5 we will raise an exception if use_reentrant is not passed. use_reentrant=False is recommended, but if you need to preserve the current default behavior, you can pass use_reentrant=True. Refer to docs for more details on the differences between the two variants.
  return fn(*args, **kwargs)
/home/ubuntu/miniconda3/envs/sd/lib/python3.10/site-packages/torch/utils/checkpoint.py:87: UserWarning: None of the inputs have requires_grad=True. Gradients will be None
  warnings.warn(
Dataset: data-is-better-together/10k_prompts_ranked:   0%|          | 1/200 [00:02<07:34,  2.28s/it]Dataset: data-is-better-together/10k_prompts_ranked:   1%|          | 2/200 [00:04<06:41,  2.03s/it]Dataset: data-is-better-together/10k_prompts_ranked:   2%|▏         | 3/200 [00:04<04:28,  1.36s/it]Dataset: data-is-better-together/10k_prompts_ranked:   2%|▏         | 4/200 [00:06<04:59,  1.53s/it]Dataset: data-is-better-together/10k_prompts_ranked:   2%|▎         | 5/200 [00:07<04:27,  1.37s/it]Dataset: data-is-better-together/10k_prompts_ranked:   3%|▎         | 6/200 [00:09<05:03,  1.57s/it]Dataset: data-is-better-together/10k_prompts_ranked:   4%|▎         | 7/200 [00:10<04:48,  1.50s/it]Dataset: data-is-better-together/10k_prompts_ranked:   4%|▍         | 8/200 [00:11<03:41,  1.15s/it]Dataset: data-is-better-together/10k_prompts_ranked:   4%|▍         | 9/200 [00:12<04:03,  1.28s/it]Dataset: data-is-better-together/10k_prompts_ranked:   5%|▌         | 10/200 [00:13<03:49,  1.21s/it]Dataset: data-is-better-together/10k_prompts_ranked:   6%|▌         | 11/200 [00:15<04:16,  1.36s/it]Dataset: data-is-better-together/10k_prompts_ranked:   6%|▌         | 12/200 [00:15<03:21,  1.07s/it]Dataset: data-is-better-together/10k_prompts_ranked:   6%|▋         | 13/200 [00:18<04:28,  1.44s/it]Dataset: data-is-better-together/10k_prompts_ranked:   7%|▋         | 14/200 [00:19<04:29,  1.45s/it]Dataset: data-is-better-together/10k_prompts_ranked:   8%|▊         | 15/200 [00:21<04:32,  1.47s/it]Dataset: data-is-better-together/10k_prompts_ranked:   8%|▊         | 16/200 [00:23<05:10,  1.69s/it]Dataset: data-is-better-together/10k_prompts_ranked:   8%|▊         | 17/200 [00:25<05:11,  1.70s/it]Dataset: data-is-better-together/10k_prompts_ranked:   9%|▉         | 18/200 [00:25<04:18,  1.42s/it]Dataset: data-is-better-together/10k_prompts_ranked:  10%|▉         | 19/200 [00:28<05:03,  1.68s/it]Dataset: data-is-better-together/10k_prompts_ranked:  10%|█         | 20/200 [00:28<04:00,  1.34s/it]Dataset: data-is-better-together/10k_prompts_ranked:  10%|█         | 21/200 [00:30<04:36,  1.54s/it]Dataset: data-is-better-together/10k_prompts_ranked:  11%|█         | 22/200 [00:31<03:48,  1.28s/it]Dataset: data-is-better-together/10k_prompts_ranked:  12%|█▏        | 23/200 [00:33<04:15,  1.44s/it]Dataset: data-is-better-together/10k_prompts_ranked:  12%|█▏        | 24/200 [00:35<04:35,  1.56s/it]Dataset: data-is-better-together/10k_prompts_ranked:  12%|█▎        | 25/200 [00:36<04:29,  1.54s/it]Dataset: data-is-better-together/10k_prompts_ranked:  13%|█▎        | 26/200 [00:38<04:25,  1.52s/it]Dataset: data-is-better-together/10k_prompts_ranked:  14%|█▎        | 27/200 [00:39<04:05,  1.42s/it]Dataset: data-is-better-together/10k_prompts_ranked:  14%|█▍        | 28/200 [00:41<04:26,  1.55s/it]Dataset: data-is-better-together/10k_prompts_ranked:  14%|█▍        | 29/200 [00:42<04:39,  1.63s/it]Dataset: data-is-better-together/10k_prompts_ranked:  15%|█▌        | 30/200 [00:44<04:47,  1.69s/it]Dataset: data-is-better-together/10k_prompts_ranked:  16%|█▌        | 31/200 [00:46<04:54,  1.74s/it]Dataset: data-is-better-together/10k_prompts_ranked:  16%|█▌        | 32/200 [00:48<05:13,  1.87s/it]Dataset: data-is-better-together/10k_prompts_ranked:  16%|█▋        | 33/200 [00:50<05:03,  1.81s/it]Dataset: data-is-better-together/10k_prompts_ranked:  17%|█▋        | 34/200 [00:51<04:44,  1.72s/it]Dataset: data-is-better-together/10k_prompts_ranked:  18%|█▊        | 35/200 [00:53<04:43,  1.72s/it]Dataset: data-is-better-together/10k_prompts_ranked:  18%|█▊        | 36/200 [00:55<04:32,  1.66s/it]Dataset: data-is-better-together/10k_prompts_ranked:  18%|█▊        | 37/200 [00:56<04:17,  1.58s/it]Dataset: data-is-better-together/10k_prompts_ranked:  19%|█▉        | 38/200 [00:58<04:06,  1.52s/it]Dataset: data-is-better-together/10k_prompts_ranked:  20%|█▉        | 39/200 [00:58<03:17,  1.23s/it]Dataset: data-is-better-together/10k_prompts_ranked:  20%|██        | 40/200 [00:59<03:20,  1.25s/it]Dataset: data-is-better-together/10k_prompts_ranked:  20%|██        | 41/200 [01:00<03:07,  1.18s/it]Dataset: data-is-better-together/10k_prompts_ranked:  21%|██        | 42/200 [01:02<03:39,  1.39s/it]Dataset: data-is-better-together/10k_prompts_ranked:  22%|██▏       | 43/200 [01:04<03:43,  1.42s/it]Dataset: data-is-better-together/10k_prompts_ranked:  22%|██▏       | 44/200 [01:06<04:02,  1.55s/it]Dataset: data-is-better-together/10k_prompts_ranked:  22%|██▎       | 45/200 [01:07<03:45,  1.46s/it]Dataset: data-is-better-together/10k_prompts_ranked:  23%|██▎       | 46/200 [01:08<03:34,  1.40s/it]Dataset: data-is-better-together/10k_prompts_ranked:  24%|██▎       | 47/200 [01:08<02:45,  1.08s/it]Dataset: data-is-better-together/10k_prompts_ranked:  24%|██▍       | 48/200 [01:09<02:08,  1.18it/s]Dataset: data-is-better-together/10k_prompts_ranked:  24%|██▍       | 49/200 [01:10<02:33,  1.02s/it]Dataset: data-is-better-together/10k_prompts_ranked:  25%|██▌       | 50/200 [01:12<03:03,  1.23s/it]Dataset: data-is-better-together/10k_prompts_ranked:  26%|██▌       | 51/200 [01:14<03:37,  1.46s/it]Dataset: data-is-better-together/10k_prompts_ranked:  26%|██▌       | 52/200 [01:15<03:29,  1.41s/it]Dataset: data-is-better-together/10k_prompts_ranked:  26%|██▋       | 53/200 [01:16<03:04,  1.25s/it]Dataset: data-is-better-together/10k_prompts_ranked:  27%|██▋       | 54/200 [01:17<02:28,  1.02s/it]Dataset: data-is-better-together/10k_prompts_ranked:  28%|██▊       | 55/200 [01:17<01:53,  1.28it/s]Dataset: data-is-better-together/10k_prompts_ranked:  28%|██▊       | 56/200 [01:18<02:08,  1.12it/s]Dataset: data-is-better-together/10k_prompts_ranked:  28%|██▊       | 57/200 [01:19<02:33,  1.07s/it]Dataset: data-is-better-together/10k_prompts_ranked:  30%|██▉       | 59/200 [01:21<02:19,  1.01it/s]Dataset: data-is-better-together/10k_prompts_ranked:  30%|███       | 60/200 [01:23<02:59,  1.28s/it]Dataset: data-is-better-together/10k_prompts_ranked:  30%|███       | 61/200 [01:24<02:36,  1.13s/it]Dataset: data-is-better-together/10k_prompts_ranked:  31%|███       | 62/200 [01:26<03:05,  1.34s/it]Dataset: data-is-better-together/10k_prompts_ranked:  32%|███▏      | 63/200 [01:28<03:29,  1.53s/it]Dataset: data-is-better-together/10k_prompts_ranked:  32%|███▏      | 64/200 [01:29<02:57,  1.31s/it]Dataset: data-is-better-together/10k_prompts_ranked:  32%|███▎      | 65/200 [01:31<03:14,  1.44s/it]Dataset: data-is-better-together/10k_prompts_ranked:  33%|███▎      | 66/200 [01:33<04:04,  1.82s/it]Dataset: data-is-better-together/10k_prompts_ranked:  34%|███▎      | 67/200 [01:35<03:48,  1.72s/it]Dataset: data-is-better-together/10k_prompts_ranked:  34%|███▍      | 68/200 [01:36<03:28,  1.58s/it]Dataset: data-is-better-together/10k_prompts_ranked:  34%|███▍      | 69/200 [01:36<02:34,  1.18s/it]Dataset: data-is-better-together/10k_prompts_ranked:  35%|███▌      | 70/200 [01:37<02:10,  1.01s/it]Dataset: data-is-better-together/10k_prompts_ranked:  36%|███▌      | 71/200 [01:37<01:40,  1.29it/s]Dataset: data-is-better-together/10k_prompts_ranked:  36%|███▌      | 72/200 [01:39<02:16,  1.07s/it]Dataset: data-is-better-together/10k_prompts_ranked:  36%|███▋      | 73/200 [01:41<02:50,  1.35s/it]Dataset: data-is-better-together/10k_prompts_ranked:  37%|███▋      | 74/200 [01:42<02:54,  1.39s/it]Dataset: data-is-better-together/10k_prompts_ranked:  38%|███▊      | 75/200 [01:44<03:11,  1.54s/it]Dataset: data-is-better-together/10k_prompts_ranked:  38%|███▊      | 76/200 [01:46<03:09,  1.53s/it]Dataset: data-is-better-together/10k_prompts_ranked:  38%|███▊      | 77/200 [01:48<03:24,  1.66s/it]Dataset: data-is-better-together/10k_prompts_ranked:  39%|███▉      | 78/200 [01:48<02:52,  1.42s/it]Dataset: data-is-better-together/10k_prompts_ranked:  40%|███▉      | 79/200 [01:51<03:15,  1.62s/it]Dataset: data-is-better-together/10k_prompts_ranked:  40%|████      | 80/200 [01:52<03:19,  1.66s/it]Dataset: data-is-better-together/10k_prompts_ranked:  40%|████      | 81/200 [01:54<03:25,  1.73s/it]Dataset: data-is-better-together/10k_prompts_ranked:  41%|████      | 82/200 [01:55<03:00,  1.53s/it]Dataset: data-is-better-together/10k_prompts_ranked:  42%|████▏     | 83/200 [01:56<02:23,  1.22s/it]Dataset: data-is-better-together/10k_prompts_ranked:  42%|████▏     | 84/200 [01:58<02:55,  1.52s/it]Dataset: data-is-better-together/10k_prompts_ranked:  42%|████▎     | 85/200 [02:00<03:07,  1.63s/it]Dataset: data-is-better-together/10k_prompts_ranked:  43%|████▎     | 86/200 [02:01<02:53,  1.52s/it]Dataset: data-is-better-together/10k_prompts_ranked:  44%|████▎     | 87/200 [02:03<03:03,  1.62s/it]Dataset: data-is-better-together/10k_prompts_ranked:  44%|████▍     | 88/200 [02:04<02:32,  1.36s/it]Dataset: data-is-better-together/10k_prompts_ranked:  44%|████▍     | 89/200 [02:06<02:59,  1.61s/it]Dataset: data-is-better-together/10k_prompts_ranked:  45%|████▌     | 90/200 [02:08<02:56,  1.60s/it]Dataset: data-is-better-together/10k_prompts_ranked:  46%|████▌     | 91/200 [02:08<02:16,  1.25s/it]Dataset: data-is-better-together/10k_prompts_ranked:  46%|████▌     | 92/200 [02:10<02:43,  1.52s/it]Dataset: data-is-better-together/10k_prompts_ranked:  46%|████▋     | 93/200 [02:12<02:46,  1.55s/it]Dataset: data-is-better-together/10k_prompts_ranked:  47%|████▋     | 94/200 [02:13<02:42,  1.53s/it]Dataset: data-is-better-together/10k_prompts_ranked:  48%|████▊     | 95/200 [02:15<02:36,  1.49s/it]Dataset: data-is-better-together/10k_prompts_ranked:  48%|████▊     | 96/200 [02:15<02:09,  1.24s/it]Dataset: data-is-better-together/10k_prompts_ranked:  48%|████▊     | 97/200 [02:16<01:45,  1.02s/it]Dataset: data-is-better-together/10k_prompts_ranked:  49%|████▉     | 98/200 [02:18<02:06,  1.24s/it]Dataset: data-is-better-together/10k_prompts_ranked:  50%|████▉     | 99/200 [02:19<02:12,  1.31s/it]Dataset: data-is-better-together/10k_prompts_ranked:  50%|█████     | 101/200 [02:20<01:42,  1.03s/it]Dataset: data-is-better-together/10k_prompts_ranked:  51%|█████     | 102/200 [02:21<01:35,  1.02it/s]Dataset: data-is-better-together/10k_prompts_ranked:  52%|█████▏    | 103/200 [02:24<02:07,  1.31s/it]Dataset: data-is-better-together/10k_prompts_ranked:  52%|█████▏    | 104/200 [02:25<02:11,  1.37s/it]Token indices sequence length is longer than the specified maximum sequence length for this model (3654 > 2048). Running this sequence through the model will result in indexing errors
Dataset: data-is-better-together/10k_prompts_ranked:  52%|█████▎    | 105/200 [02:34<05:39,  3.57s/it]Dataset: data-is-better-together/10k_prompts_ranked:  53%|█████▎    | 106/200 [02:36<04:36,  2.94s/it]Dataset: data-is-better-together/10k_prompts_ranked:  54%|█████▎    | 107/200 [02:38<04:06,  2.65s/it]Dataset: data-is-better-together/10k_prompts_ranked:  54%|█████▍    | 108/200 [02:39<03:40,  2.39s/it]Dataset: data-is-better-together/10k_prompts_ranked:  55%|█████▍    | 109/200 [02:40<02:40,  1.77s/it]Dataset: data-is-better-together/10k_prompts_ranked:  55%|█████▌    | 110/200 [02:42<02:45,  1.84s/it]Dataset: data-is-better-together/10k_prompts_ranked:  56%|█████▌    | 111/200 [02:43<02:35,  1.75s/it]Dataset: data-is-better-together/10k_prompts_ranked:  56%|█████▌    | 112/200 [02:45<02:23,  1.63s/it]Dataset: data-is-better-together/10k_prompts_ranked:  56%|█████▋    | 113/200 [02:47<02:32,  1.75s/it]Dataset: data-is-better-together/10k_prompts_ranked:  57%|█████▋    | 114/200 [02:47<02:03,  1.43s/it]Dataset: data-is-better-together/10k_prompts_ranked:  57%|█████▊    | 115/200 [02:48<01:34,  1.12s/it]Dataset: data-is-better-together/10k_prompts_ranked:  58%|█████▊    | 116/200 [02:48<01:09,  1.21it/s]Dataset: data-is-better-together/10k_prompts_ranked:  58%|█████▊    | 117/200 [02:49<01:07,  1.24it/s]Dataset: data-is-better-together/10k_prompts_ranked:  59%|█████▉    | 118/200 [02:49<00:53,  1.52it/s]Dataset: data-is-better-together/10k_prompts_ranked:  60%|█████▉    | 119/200 [02:50<01:14,  1.09it/s]Dataset: data-is-better-together/10k_prompts_ranked:  60%|██████    | 120/200 [02:52<01:33,  1.17s/it]Dataset: data-is-better-together/10k_prompts_ranked:  60%|██████    | 121/200 [02:53<01:23,  1.06s/it]Dataset: data-is-better-together/10k_prompts_ranked:  61%|██████    | 122/200 [02:54<01:26,  1.10s/it]Dataset: data-is-better-together/10k_prompts_ranked:  62%|██████▏   | 123/200 [02:56<01:44,  1.36s/it]Dataset: data-is-better-together/10k_prompts_ranked:  62%|██████▏   | 124/200 [02:58<02:01,  1.60s/it]Dataset: data-is-better-together/10k_prompts_ranked:  62%|██████▎   | 125/200 [02:59<01:38,  1.31s/it]Dataset: data-is-better-together/10k_prompts_ranked:  63%|██████▎   | 126/200 [03:00<01:39,  1.35s/it]Dataset: data-is-better-together/10k_prompts_ranked:  64%|██████▎   | 127/200 [03:02<01:41,  1.39s/it]Dataset: data-is-better-together/10k_prompts_ranked:  64%|██████▍   | 128/200 [03:03<01:27,  1.22s/it]Dataset: data-is-better-together/10k_prompts_ranked:  64%|██████▍   | 129/200 [03:05<01:41,  1.43s/it]Dataset: data-is-better-together/10k_prompts_ranked:  65%|██████▌   | 130/200 [03:06<01:45,  1.51s/it]Dataset: data-is-better-together/10k_prompts_ranked:  66%|██████▌   | 131/200 [03:08<01:48,  1.57s/it]Dataset: data-is-better-together/10k_prompts_ranked:  66%|██████▌   | 132/200 [03:08<01:22,  1.21s/it]Dataset: data-is-better-together/10k_prompts_ranked:  66%|██████▋   | 133/200 [03:10<01:31,  1.37s/it]Dataset: data-is-better-together/10k_prompts_ranked:  67%|██████▋   | 134/200 [03:10<01:07,  1.02s/it]Dataset: data-is-better-together/10k_prompts_ranked:  68%|██████▊   | 135/200 [03:11<00:53,  1.22it/s]Dataset: data-is-better-together/10k_prompts_ranked:  68%|██████▊   | 136/200 [03:11<00:48,  1.32it/s]Dataset: data-is-better-together/10k_prompts_ranked:  68%|██████▊   | 137/200 [03:12<00:46,  1.34it/s]Dataset: data-is-better-together/10k_prompts_ranked:  69%|██████▉   | 138/200 [03:14<01:05,  1.05s/it]Dataset: data-is-better-together/10k_prompts_ranked:  70%|██████▉   | 139/200 [03:15<01:15,  1.24s/it]Dataset: data-is-better-together/10k_prompts_ranked:  70%|███████   | 140/200 [03:18<01:31,  1.52s/it]Dataset: data-is-better-together/10k_prompts_ranked:  70%|███████   | 141/200 [03:19<01:26,  1.46s/it]Dataset: data-is-better-together/10k_prompts_ranked:  71%|███████   | 142/200 [03:20<01:26,  1.48s/it]Dataset: data-is-better-together/10k_prompts_ranked:  72%|███████▏  | 143/200 [03:21<01:14,  1.31s/it]Dataset: data-is-better-together/10k_prompts_ranked:  72%|███████▏  | 144/200 [03:22<00:55,  1.02it/s]Dataset: data-is-better-together/10k_prompts_ranked:  72%|███████▎  | 145/200 [03:23<01:07,  1.23s/it]Dataset: data-is-better-together/10k_prompts_ranked:  73%|███████▎  | 146/200 [03:24<00:49,  1.08it/s]Dataset: data-is-better-together/10k_prompts_ranked:  74%|███████▎  | 147/200 [03:25<01:00,  1.14s/it]Dataset: data-is-better-together/10k_prompts_ranked:  74%|███████▍  | 148/200 [03:27<01:03,  1.22s/it]Dataset: data-is-better-together/10k_prompts_ranked:  74%|███████▍  | 149/200 [03:28<01:06,  1.31s/it]Dataset: data-is-better-together/10k_prompts_ranked:  75%|███████▌  | 150/200 [03:30<01:07,  1.35s/it]Dataset: data-is-better-together/10k_prompts_ranked:  76%|███████▌  | 151/200 [03:31<01:07,  1.39s/it]Dataset: data-is-better-together/10k_prompts_ranked:  76%|███████▌  | 152/200 [03:33<01:10,  1.47s/it]Dataset: data-is-better-together/10k_prompts_ranked:  76%|███████▋  | 153/200 [03:33<00:54,  1.16s/it]Dataset: data-is-better-together/10k_prompts_ranked:  78%|███████▊  | 155/200 [03:33<00:30,  1.48it/s]Dataset: data-is-better-together/10k_prompts_ranked:  78%|███████▊  | 156/200 [03:36<00:45,  1.03s/it]Dataset: data-is-better-together/10k_prompts_ranked:  78%|███████▊  | 157/200 [03:37<00:47,  1.11s/it]Dataset: data-is-better-together/10k_prompts_ranked:  79%|███████▉  | 158/200 [03:39<00:53,  1.27s/it]Dataset: data-is-better-together/10k_prompts_ranked:  80%|███████▉  | 159/200 [03:40<00:52,  1.29s/it]Dataset: data-is-better-together/10k_prompts_ranked:  80%|████████  | 160/200 [03:41<00:55,  1.38s/it]Dataset: data-is-better-together/10k_prompts_ranked:  80%|████████  | 161/200 [03:43<00:49,  1.28s/it]Dataset: data-is-better-together/10k_prompts_ranked:  81%|████████  | 162/200 [03:44<00:51,  1.36s/it]Dataset: data-is-better-together/10k_prompts_ranked:  82%|████████▏ | 163/200 [03:45<00:50,  1.37s/it]Dataset: data-is-better-together/10k_prompts_ranked:  82%|████████▏ | 164/200 [03:48<00:56,  1.57s/it]Dataset: data-is-better-together/10k_prompts_ranked:  82%|████████▎ | 165/200 [03:49<00:57,  1.65s/it]Dataset: data-is-better-together/10k_prompts_ranked:  83%|████████▎ | 166/200 [03:51<00:58,  1.73s/it]Dataset: data-is-better-together/10k_prompts_ranked:  84%|████████▎ | 167/200 [03:53<00:58,  1.78s/it]Dataset: data-is-better-together/10k_prompts_ranked:  84%|████████▍ | 168/200 [03:55<00:56,  1.77s/it]Dataset: data-is-better-together/10k_prompts_ranked:  84%|████████▍ | 169/200 [03:57<00:56,  1.83s/it]Dataset: data-is-better-together/10k_prompts_ranked:  85%|████████▌ | 170/200 [03:58<00:49,  1.64s/it]Dataset: data-is-better-together/10k_prompts_ranked:  86%|████████▌ | 171/200 [04:00<00:50,  1.73s/it]Dataset: data-is-better-together/10k_prompts_ranked:  86%|████████▌ | 172/200 [04:02<00:48,  1.73s/it]Dataset: data-is-better-together/10k_prompts_ranked:  86%|████████▋ | 173/200 [04:03<00:46,  1.72s/it]Dataset: data-is-better-together/10k_prompts_ranked:  87%|████████▋ | 174/200 [04:05<00:47,  1.81s/it]Dataset: data-is-better-together/10k_prompts_ranked:  88%|████████▊ | 175/200 [04:07<00:43,  1.75s/it]Dataset: data-is-better-together/10k_prompts_ranked:  88%|████████▊ | 176/200 [04:09<00:43,  1.83s/it]Dataset: data-is-better-together/10k_prompts_ranked:  88%|████████▊ | 177/200 [04:11<00:43,  1.88s/it]Dataset: data-is-better-together/10k_prompts_ranked:  89%|████████▉ | 178/200 [04:12<00:33,  1.51s/it]Dataset: data-is-better-together/10k_prompts_ranked:  90%|████████▉ | 179/200 [04:14<00:36,  1.72s/it]Dataset: data-is-better-together/10k_prompts_ranked:  90%|█████████ | 180/200 [04:16<00:34,  1.74s/it]Dataset: data-is-better-together/10k_prompts_ranked:  90%|█████████ | 181/200 [04:16<00:25,  1.33s/it]Dataset: data-is-better-together/10k_prompts_ranked:  91%|█████████ | 182/200 [04:18<00:24,  1.39s/it]Dataset: data-is-better-together/10k_prompts_ranked:  92%|█████████▏| 183/200 [04:18<00:18,  1.07s/it]Dataset: data-is-better-together/10k_prompts_ranked:  92%|█████████▏| 184/200 [04:20<00:23,  1.45s/it]Dataset: data-is-better-together/10k_prompts_ranked:  92%|█████████▎| 185/200 [04:22<00:23,  1.54s/it]Dataset: data-is-better-together/10k_prompts_ranked:  93%|█████████▎| 186/200 [04:24<00:22,  1.57s/it]Average accept_length over 57 steps: 3.6491
Average accept_length over 62 steps: 3.2258
Average accept_length over 18 steps: 4.8889
Average accept_length over 60 steps: 3.3167
Average accept_length over 36 steps: 3.6111
Average accept_length over 65 steps: 2.9846
Average accept_length over 44 steps: 4.8409
Average accept_length over 13 steps: 5.2308
Average accept_length over 52 steps: 4.0962
Average accept_length over 34 steps: 6.5882
Average accept_length over 57 steps: 3.5263
Average accept_length over 13 steps: 2.5385
Average accept_length over 77 steps: 2.3896
Average accept_length over 49 steps: 4.2857
Average accept_length over 50 steps: 4.2200
Average accept_length over 74 steps: 2.5676
Average accept_length over 58 steps: 3.5517
Average accept_length over 25 steps: 4.0800
Average accept_length over 71 steps: 2.6197
Average accept_length over 18 steps: 2.1111
Average accept_length over 68 steps: 2.7794
Average accept_length over 22 steps: 4.9091
Average accept_length over 61 steps: 3.2459
Average accept_length over 63 steps: 3.1111
Average accept_length over 50 steps: 3.5800
Average accept_length over 49 steps: 4.3673
Average accept_length over 39 steps: 4.2564
Average accept_length over 62 steps: 3.1774
Average accept_length over 62 steps: 3.1935
Average accept_length over 61 steps: 3.2295
Average accept_length over 63 steps: 3.0794
Average accept_length over 73 steps: 2.5342
Average accept_length over 57 steps: 3.5614
Average accept_length over 49 steps: 4.3061
Average accept_length over 57 steps: 3.1754
Average accept_length over 51 steps: 4.0392
Average accept_length over 46 steps: 4.5870
Average accept_length over 45 steps: 4.7333
Average accept_length over 18 steps: 1.3333
Average accept_length over 42 steps: 5.1667
Average accept_length over 33 steps: 3.2727
Average accept_length over 62 steps: 3.1935
Average accept_length over 50 steps: 3.1600
Average accept_length over 63 steps: 3.0794
Average accept_length over 41 steps: 5.2683
Average accept_length over 41 steps: 5.2683
Average accept_length over 11 steps: 3.1818
Average accept_length over 9 steps: 1.6667
Average accept_length over 46 steps: 4.6087
Average accept_length over 57 steps: 3.5789
Average accept_length over 67 steps: 2.9254
Average accept_length over 43 steps: 4.9767
Average accept_length over 29 steps: 2.9310
Average accept_length over 15 steps: 4.4000
Average accept_length over 7 steps: 1.8571
Average accept_length over 38 steps: 3.7632
Average accept_length over 50 steps: 2.7400
Average accept_length over 1 steps: 2.0000
Average accept_length over 58 steps: 2.8966
Average accept_length over 72 steps: 2.6528
Average accept_length over 23 steps: 3.5217
Average accept_length over 64 steps: 3.0469
Average accept_length over 67 steps: 2.8657
Average accept_length over 24 steps: 4.4583
Average accept_length over 60 steps: 3.2833
Average accept_length over 84 steps: 2.1071
Average accept_length over 47 steps: 4.4681
Average accept_length over 41 steps: 5.3415
Average accept_length over 7 steps: 3.1429
Average accept_length over 19 steps: 3.4211
Average accept_length over 7 steps: 3.7143
Average accept_length over 58 steps: 3.4483
Average accept_length over 66 steps: 2.9394
Average accept_length over 49 steps: 4.3673
Average accept_length over 62 steps: 3.2581
Average accept_length over 50 steps: 4.1400
Average accept_length over 66 steps: 2.9697
Average accept_length over 28 steps: 3.3929
Average accept_length over 69 steps: 2.7391
Average accept_length over 58 steps: 3.4310
Average accept_length over 63 steps: 3.0952
Average accept_length over 35 steps: 1.8857
Average accept_length over 16 steps: 4.1875
Average accept_length over 74 steps: 2.5541
Average accept_length over 63 steps: 3.0794
Average accept_length over 40 steps: 5.4250
Average accept_length over 62 steps: 3.1613
Average accept_length over 24 steps: 4.5833
Average accept_length over 74 steps: 2.5000
Average accept_length over 52 steps: 3.9808
Average accept_length over 14 steps: 4.7857
Average accept_length over 71 steps: 2.6479
Average accept_length over 54 steps: 3.8704
Average accept_length over 48 steps: 3.1667
Average accept_length over 45 steps: 4.7333
Average accept_length over 21 steps: 2.0476
Average accept_length over 16 steps: 3.5000
Average accept_length over 57 steps: 3.5088
Average accept_length over 47 steps: 3.5106
Average accept_length over 2 steps: 5.0000
Average accept_length over 44 steps: 4.8636
Average accept_length over 26 steps: 3.2692
Average accept_length over 76 steps: 2.4737
Average accept_length over 49 steps: 4.3673
Average accept_length over 256 steps: 0.0039
Average accept_length over 43 steps: 5.1163
Average accept_length over 60 steps: 3.2833
Average accept_length over 58 steps: 3.1552
Average accept_length over 8 steps: 3.3750
Average accept_length over 66 steps: 2.9091
Average accept_length over 50 steps: 4.1600
Average accept_length over 43 steps: 5.0698
Average accept_length over 68 steps: 2.7794
Average accept_length over 22 steps: 3.6818
Average accept_length over 12 steps: 3.0833
Average accept_length over 4 steps: 4.5000
Average accept_length over 25 steps: 2.5200
Average accept_length over 9 steps: 3.3333
Average accept_length over 50 steps: 4.2000
Average accept_length over 57 steps: 3.5088
Average accept_length over 26 steps: 5.6923
Average accept_length over 39 steps: 4.9487
Average accept_length over 65 steps: 2.9538
Average accept_length over 71 steps: 2.6761
Average accept_length over 20 steps: 3.4000
Average accept_length over 47 steps: 4.5957
Average accept_length over 49 steps: 4.2449
Average accept_length over 27 steps: 4.0000
Average accept_length over 64 steps: 3.0625
Average accept_length over 56 steps: 3.5893
Average accept_length over 57 steps: 3.5263
Average accept_length over 12 steps: 3.5833
Average accept_length over 58 steps: 2.7586
Average accept_length over 5 steps: 6.8000
Average accept_length over 11 steps: 3.6364
Average accept_length over 19 steps: 3.6842
Average accept_length over 23 steps: 4.4783
Average accept_length over 58 steps: 3.4828
Average accept_length over 55 steps: 3.7091
Average accept_length over 72 steps: 2.5833
Average accept_length over 43 steps: 5.0233
Average accept_length over 51 steps: 3.5098
Average accept_length over 30 steps: 3.0667
Average accept_length over 6 steps: 2.3333
Average accept_length over 60 steps: 3.3000
Average accept_length over 6 steps: 5.3333
Average accept_length over 53 steps: 3.9245
Average accept_length over 46 steps: 4.6087
Average accept_length over 49 steps: 4.2857
Average accept_length over 46 steps: 4.1957
Average accept_length over 47 steps: 4.5319
Average accept_length over 54 steps: 3.7593
Average accept_length over 13 steps: 2.4615
Average accept_length over 2 steps: 4.0000
Average accept_length over 3 steps: 3.6667
Average accept_length over 69 steps: 2.7246
Average accept_length over 41 steps: 5.3659
Average accept_length over 56 steps: 3.6786
Average accept_length over 42 steps: 5.1190
Average accept_length over 52 steps: 4.0192
Average accept_length over 32 steps: 3.4062
Average accept_length over 48 steps: 4.3542
Average accept_length over 37 steps: 3.5946
Average accept_length over 64 steps: 3.0469
Average accept_length over 58 steps: 3.4655
Average accept_length over 61 steps: 3.2295
Average accept_length over 60 steps: 2.8333
Average accept_length over 55 steps: 3.7273
Average accept_length over 63 steps: 3.0794
Average accept_length over 30 steps: 3.3000
Average accept_length over 62 steps: 3.1452
Average accept_length over 54 steps: 3.7593
Average accept_length over 54 steps: 3.7593
Average accept_length over 65 steps: 3.0154
Average accept_length over 51 steps: 4.0980
Average accept_length over 65 steps: 2.9846
Average accept_length over 64 steps: 3.0156
Average accept_length over 20 steps: 3.6500
Average accept_length over 71 steps: 2.6338
Average accept_length over 58 steps: 3.1897
Average accept_length over 11 steps: 5.2727
Average accept_length over 48 steps: 4.4167
Average accept_length over 10 steps: 2.8000
Average accept_length over 75 steps: 2.4667
Average accept_length over 55 steps: 3.7818
Average accept_length over 53 steps: 3.8491
Dataset: data-is-better-together/10k_prompts_ranked:  94%|█████████▎| 187/200 [04:25<00:19,  1.51s/it]Dataset: data-is-better-together/10k_prompts_ranked:  94%|█████████▍| 188/200 [04:25<00:13,  1.12s/it]Dataset: data-is-better-together/10k_prompts_ranked:  94%|█████████▍| 189/200 [04:26<00:12,  1.14s/it]Dataset: data-is-better-together/10k_prompts_ranked:  95%|█████████▌| 190/200 [04:28<00:12,  1.23s/it]Dataset: data-is-better-together/10k_prompts_ranked:  96%|█████████▌| 191/200 [04:30<00:13,  1.45s/it]Dataset: data-is-better-together/10k_prompts_ranked:  96%|█████████▌| 192/200 [04:31<00:10,  1.27s/it]Dataset: data-is-better-together/10k_prompts_ranked:  96%|█████████▋| 193/200 [04:32<00:09,  1.38s/it]Dataset: data-is-better-together/10k_prompts_ranked:  97%|█████████▋| 194/200 [04:34<00:08,  1.48s/it]Dataset: data-is-better-together/10k_prompts_ranked:  98%|█████████▊| 195/200 [04:36<00:07,  1.49s/it]Dataset: data-is-better-together/10k_prompts_ranked:  98%|█████████▊| 196/200 [04:36<00:04,  1.20s/it]Dataset: data-is-better-together/10k_prompts_ranked:  98%|█████████▊| 197/200 [04:38<00:03,  1.26s/it]Dataset: data-is-better-together/10k_prompts_ranked:  99%|█████████▉| 198/200 [04:39<00:02,  1.31s/it]Dataset: data-is-better-together/10k_prompts_ranked: 100%|█████████▉| 199/200 [04:40<00:01,  1.30s/it]Dataset: data-is-better-together/10k_prompts_ranked: 100%|██████████| 200/200 [04:42<00:00,  1.38s/it]Dataset: data-is-better-together/10k_prompts_ranked: 100%|██████████| 200/200 [04:42<00:00,  1.41s/it]
Average accept_length over 43 steps: 5.0465
Average accept_length over 6 steps: 1.6667
Average accept_length over 37 steps: 3.9459
Average accept_length over 46 steps: 4.6087
Average accept_length over 62 steps: 3.0161
Average accept_length over 25 steps: 4.0400
Average accept_length over 47 steps: 4.5319
Average accept_length over 54 steps: 3.8519
Average accept_length over 48 steps: 4.3958
Average accept_length over 16 steps: 4.0000
Average accept_length over 43 steps: 4.1628
Average accept_length over 46 steps: 2.5870
Average accept_length over 39 steps: 4.5128
Average accept_length over 50 steps: 4.1600
🔄 Completions saved to /home/ubuntu/sd/HandEval/outputs/vicuna-7b-v1.3/data-is-better-together/10k_prompts_ranked_completions.jsonl

✅  Results saved to /home/ubuntu/sd/HandEval/outputs/vicuna-7b-v1.3/data-is-better-together/10k_prompts_ranked_metrics.json
{
  "num_samples": 200,
  "total_time_sec": 282.3027346134186,
  "avg_time_per_sample_sec": 1.411513673067093,
  "samples_file": "outputs/vicuna-7b-v1.3/data-is-better-together/10k_prompts_ranked_completions.jsonl"
}
