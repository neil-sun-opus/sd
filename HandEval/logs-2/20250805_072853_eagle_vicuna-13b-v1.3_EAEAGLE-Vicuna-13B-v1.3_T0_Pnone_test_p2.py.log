LlamaForCausalLM has generative capabilities, as `prepare_inputs_for_generation` is explicitly overwritten. However, it doesn't directly inherit from `GenerationMixin`. From 👉v4.50👈 onwards, `PreTrainedModel` will NOT inherit from `GenerationMixin`, and this model will lose the ability to call `generate` and other related functions.
  - If you're using `trust_remote_code=True`, you can get rid of this warning by loading the model with an auto class. See https://huggingface.co/docs/transformers/en/model_doc/auto#auto-classes
  - If you are the owner of the model architecture code, please modify your model class such that it inherits from `GenerationMixin` (after `PreTrainedModel`, otherwise you'll get an exception).
  - If you are not the owner of the model architecture class, please contact the model code owner to update it.
Loading EAGLE model from ../model_ckpt/EAGLE-Vicuna-13B-v1.3 with dtype float16
Base model: ../model_ckpt/vicuna-13b-v1.3
Loading checkpoint shards:   0%|          | 0/3 [00:00<?, ?it/s]Loading checkpoint shards:  33%|███▎      | 1/3 [00:01<00:03,  1.54s/it]Loading checkpoint shards:  67%|██████▋   | 2/3 [00:03<00:01,  1.54s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:04<00:00,  1.29s/it]Loading checkpoint shards: 100%|██████████| 3/3 [00:04<00:00,  1.36s/it]
/home/ubuntu/sd/EAGLE/eagle/model/ea_model.py:123: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  ea_layer_state_dict = torch.load(load_model_path,
You are using the default legacy behaviour of the <class 'transformers.models.llama.tokenization_llama.LlamaTokenizer'>. This is expected, and simply means that the `legacy` (previous) behavior will be used so nothing changes for you. If you want to use the new behaviour, set `legacy=False`. This should only be set if you understand what it means, and thoroughly read the reason why this was added as explained in https://github.com/huggingface/transformers/pull/24565 - if you loaded a llama tokenizer from a GGUF file you can ignore this message
/home/ubuntu/sd/EAGLE/eagle/model/cnets1.py:510: FutureWarning: You are using `torch.load` with `weights_only=False` (the current default value), which uses the default pickle module implicitly. It is possible to construct malicious pickle data which will execute arbitrary code during unpickling (See https://github.com/pytorch/pytorch/blob/main/SECURITY.md#untrusted-models for more details). In a future release, the default value for `weights_only` will be flipped to `True`. This limits the functions that could be executed during unpickling. Arbitrary objects will no longer be allowed to be loaded via this mode unless they are explicitly allowlisted by the user via `torch.serialization.add_safe_globals`. We recommend you start setting `weights_only=True` for any use case where you don't have full control of the loaded file. Please open an issue on GitHub for any issues related to this experimental feature.
  weights = torch.load(local_emb_path)
Dataset: data-is-better-together/10k_prompts_ranked:   0%|          | 0/200 [00:00<?, ?it/s]/home/ubuntu/miniconda3/envs/sd/lib/python3.10/site-packages/torch/_dynamo/eval_frame.py:632: UserWarning: torch.utils.checkpoint: the use_reentrant parameter should be passed explicitly. In version 2.5 we will raise an exception if use_reentrant is not passed. use_reentrant=False is recommended, but if you need to preserve the current default behavior, you can pass use_reentrant=True. Refer to docs for more details on the differences between the two variants.
  return fn(*args, **kwargs)
/home/ubuntu/miniconda3/envs/sd/lib/python3.10/site-packages/torch/utils/checkpoint.py:87: UserWarning: None of the inputs have requires_grad=True. Gradients will be None
  warnings.warn(
Dataset: data-is-better-together/10k_prompts_ranked:   0%|          | 1/200 [00:02<07:41,  2.32s/it]Dataset: data-is-better-together/10k_prompts_ranked:   1%|          | 2/200 [00:04<07:03,  2.14s/it]Dataset: data-is-better-together/10k_prompts_ranked:   2%|▏         | 3/200 [00:07<07:56,  2.42s/it]Dataset: data-is-better-together/10k_prompts_ranked:   2%|▏         | 4/200 [00:09<07:30,  2.30s/it]Dataset: data-is-better-together/10k_prompts_ranked:   2%|▎         | 5/200 [00:09<05:12,  1.60s/it]Dataset: data-is-better-together/10k_prompts_ranked:   3%|▎         | 6/200 [00:11<06:01,  1.86s/it]Dataset: data-is-better-together/10k_prompts_ranked:   4%|▎         | 7/200 [00:13<05:47,  1.80s/it]Dataset: data-is-better-together/10k_prompts_ranked:   4%|▍         | 8/200 [00:14<04:45,  1.49s/it]Dataset: data-is-better-together/10k_prompts_ranked:   4%|▍         | 9/200 [00:16<04:57,  1.56s/it]Dataset: data-is-better-together/10k_prompts_ranked:   5%|▌         | 10/200 [00:17<04:31,  1.43s/it]Dataset: data-is-better-together/10k_prompts_ranked:   6%|▌         | 11/200 [00:19<05:10,  1.64s/it]Dataset: data-is-better-together/10k_prompts_ranked:   6%|▌         | 12/200 [00:19<04:04,  1.30s/it]Dataset: data-is-better-together/10k_prompts_ranked:   6%|▋         | 13/200 [00:21<04:30,  1.45s/it]Dataset: data-is-better-together/10k_prompts_ranked:   7%|▋         | 14/200 [00:23<04:25,  1.43s/it]Dataset: data-is-better-together/10k_prompts_ranked:   8%|▊         | 15/200 [00:24<04:34,  1.48s/it]Dataset: data-is-better-together/10k_prompts_ranked:   8%|▊         | 16/200 [00:26<05:13,  1.71s/it]Dataset: data-is-better-together/10k_prompts_ranked:   8%|▊         | 17/200 [00:28<05:11,  1.70s/it]Dataset: data-is-better-together/10k_prompts_ranked:   9%|▉         | 18/200 [00:29<04:28,  1.47s/it]Dataset: data-is-better-together/10k_prompts_ranked:  10%|▉         | 19/200 [00:31<04:45,  1.58s/it]Dataset: data-is-better-together/10k_prompts_ranked:  10%|█         | 20/200 [00:32<03:55,  1.31s/it]Dataset: data-is-better-together/10k_prompts_ranked:  10%|█         | 21/200 [00:34<04:52,  1.63s/it]Dataset: data-is-better-together/10k_prompts_ranked:  11%|█         | 22/200 [00:36<04:48,  1.62s/it]Dataset: data-is-better-together/10k_prompts_ranked:  12%|█▏        | 23/200 [00:37<04:52,  1.65s/it]Dataset: data-is-better-together/10k_prompts_ranked:  12%|█▏        | 24/200 [00:40<05:25,  1.85s/it]Dataset: data-is-better-together/10k_prompts_ranked:  12%|█▎        | 25/200 [00:41<05:01,  1.72s/it]Dataset: data-is-better-together/10k_prompts_ranked:  13%|█▎        | 26/200 [00:43<04:57,  1.71s/it]Dataset: data-is-better-together/10k_prompts_ranked:  14%|█▎        | 27/200 [00:44<04:47,  1.66s/it]Dataset: data-is-better-together/10k_prompts_ranked:  14%|█▍        | 28/200 [00:46<04:59,  1.74s/it]Dataset: data-is-better-together/10k_prompts_ranked:  14%|█▍        | 29/200 [00:48<05:13,  1.83s/it]Dataset: data-is-better-together/10k_prompts_ranked:  15%|█▌        | 30/200 [00:49<04:30,  1.59s/it]Dataset: data-is-better-together/10k_prompts_ranked:  16%|█▌        | 31/200 [00:51<04:29,  1.60s/it]Dataset: data-is-better-together/10k_prompts_ranked:  16%|█▌        | 32/200 [00:53<05:04,  1.81s/it]Dataset: data-is-better-together/10k_prompts_ranked:  16%|█▋        | 33/200 [00:55<04:52,  1.75s/it]Dataset: data-is-better-together/10k_prompts_ranked:  17%|█▋        | 34/200 [00:56<04:32,  1.64s/it]Dataset: data-is-better-together/10k_prompts_ranked:  18%|█▊        | 35/200 [00:57<04:08,  1.51s/it]Dataset: data-is-better-together/10k_prompts_ranked:  18%|█▊        | 36/200 [00:59<04:21,  1.59s/it]Dataset: data-is-better-together/10k_prompts_ranked:  18%|█▊        | 37/200 [01:01<04:14,  1.56s/it]Dataset: data-is-better-together/10k_prompts_ranked:  19%|█▉        | 38/200 [01:02<04:19,  1.60s/it]Dataset: data-is-better-together/10k_prompts_ranked:  20%|█▉        | 39/200 [01:04<03:58,  1.48s/it]Dataset: data-is-better-together/10k_prompts_ranked:  20%|██        | 40/200 [01:05<04:13,  1.58s/it]Dataset: data-is-better-together/10k_prompts_ranked:  20%|██        | 41/200 [01:06<03:31,  1.33s/it]Dataset: data-is-better-together/10k_prompts_ranked:  21%|██        | 42/200 [01:08<04:14,  1.61s/it]Dataset: data-is-better-together/10k_prompts_ranked:  22%|██▏       | 43/200 [01:09<03:49,  1.46s/it]Dataset: data-is-better-together/10k_prompts_ranked:  22%|██▏       | 44/200 [01:11<04:15,  1.64s/it]Dataset: data-is-better-together/10k_prompts_ranked:  22%|██▎       | 45/200 [01:13<04:01,  1.56s/it]Dataset: data-is-better-together/10k_prompts_ranked:  23%|██▎       | 46/200 [01:14<03:32,  1.38s/it]Dataset: data-is-better-together/10k_prompts_ranked:  24%|██▎       | 47/200 [01:14<02:52,  1.13s/it]Dataset: data-is-better-together/10k_prompts_ranked:  24%|██▍       | 48/200 [01:15<02:13,  1.14it/s]Dataset: data-is-better-together/10k_prompts_ranked:  24%|██▍       | 49/200 [01:16<02:35,  1.03s/it]Dataset: data-is-better-together/10k_prompts_ranked:  25%|██▌       | 50/200 [01:18<03:01,  1.21s/it]Dataset: data-is-better-together/10k_prompts_ranked:  26%|██▌       | 51/200 [01:20<03:36,  1.46s/it]Dataset: data-is-better-together/10k_prompts_ranked:  26%|██▌       | 52/200 [01:21<03:28,  1.41s/it]Dataset: data-is-better-together/10k_prompts_ranked:  26%|██▋       | 53/200 [01:22<03:05,  1.26s/it]Dataset: data-is-better-together/10k_prompts_ranked:  27%|██▋       | 54/200 [01:23<02:35,  1.07s/it]Dataset: data-is-better-together/10k_prompts_ranked:  28%|██▊       | 55/200 [01:23<01:59,  1.21it/s]Dataset: data-is-better-together/10k_prompts_ranked:  28%|██▊       | 56/200 [01:24<01:57,  1.22it/s]Dataset: data-is-better-together/10k_prompts_ranked:  28%|██▊       | 57/200 [01:25<02:38,  1.11s/it]Dataset: data-is-better-together/10k_prompts_ranked:  30%|██▉       | 59/200 [01:28<02:33,  1.09s/it]Dataset: data-is-better-together/10k_prompts_ranked:  30%|███       | 60/200 [01:30<03:29,  1.50s/it]Dataset: data-is-better-together/10k_prompts_ranked:  30%|███       | 61/200 [01:31<03:05,  1.33s/it]Dataset: data-is-better-together/10k_prompts_ranked:  31%|███       | 62/200 [01:34<03:49,  1.66s/it]Dataset: data-is-better-together/10k_prompts_ranked:  32%|███▏      | 63/200 [01:36<04:08,  1.81s/it]Dataset: data-is-better-together/10k_prompts_ranked:  32%|███▏      | 64/200 [01:37<03:26,  1.52s/it]Dataset: data-is-better-together/10k_prompts_ranked:  32%|███▎      | 65/200 [01:39<03:43,  1.66s/it]Dataset: data-is-better-together/10k_prompts_ranked:  33%|███▎      | 66/200 [01:41<04:01,  1.81s/it]Dataset: data-is-better-together/10k_prompts_ranked:  34%|███▎      | 67/200 [01:42<03:51,  1.74s/it]Dataset: data-is-better-together/10k_prompts_ranked:  34%|███▍      | 68/200 [01:44<03:32,  1.61s/it]Dataset: data-is-better-together/10k_prompts_ranked:  34%|███▍      | 69/200 [01:44<02:38,  1.21s/it]Dataset: data-is-better-together/10k_prompts_ranked:  35%|███▌      | 70/200 [01:44<02:02,  1.06it/s]Dataset: data-is-better-together/10k_prompts_ranked:  36%|███▌      | 71/200 [01:45<01:33,  1.37it/s]Dataset: data-is-better-together/10k_prompts_ranked:  36%|███▌      | 72/200 [01:46<02:08,  1.00s/it]Dataset: data-is-better-together/10k_prompts_ranked:  36%|███▋      | 73/200 [01:48<02:29,  1.18s/it]Dataset: data-is-better-together/10k_prompts_ranked:  37%|███▋      | 74/200 [01:50<02:51,  1.36s/it]Dataset: data-is-better-together/10k_prompts_ranked:  38%|███▊      | 75/200 [01:51<03:09,  1.52s/it]Dataset: data-is-better-together/10k_prompts_ranked:  38%|███▊      | 76/200 [01:53<03:03,  1.48s/it]Dataset: data-is-better-together/10k_prompts_ranked:  38%|███▊      | 77/200 [01:55<03:18,  1.61s/it]Dataset: data-is-better-together/10k_prompts_ranked:  39%|███▉      | 78/200 [01:56<02:48,  1.38s/it]Dataset: data-is-better-together/10k_prompts_ranked:  40%|███▉      | 79/200 [01:58<03:16,  1.62s/it]Dataset: data-is-better-together/10k_prompts_ranked:  40%|████      | 80/200 [01:59<03:18,  1.65s/it]Dataset: data-is-better-together/10k_prompts_ranked:  40%|████      | 81/200 [02:01<03:25,  1.73s/it]Dataset: data-is-better-together/10k_prompts_ranked:  41%|████      | 82/200 [02:03<03:33,  1.81s/it]Dataset: data-is-better-together/10k_prompts_ranked:  42%|████▏     | 83/200 [02:04<02:52,  1.48s/it]Dataset: data-is-better-together/10k_prompts_ranked:  42%|████▏     | 84/200 [02:06<03:04,  1.59s/it]Dataset: data-is-better-together/10k_prompts_ranked:  42%|████▎     | 85/200 [02:08<03:10,  1.66s/it]Dataset: data-is-better-together/10k_prompts_ranked:  43%|████▎     | 86/200 [02:09<03:03,  1.61s/it]Dataset: data-is-better-together/10k_prompts_ranked:  44%|████▎     | 87/200 [02:11<03:09,  1.68s/it]Dataset: data-is-better-together/10k_prompts_ranked:  44%|████▍     | 88/200 [02:12<02:38,  1.42s/it]Dataset: data-is-better-together/10k_prompts_ranked:  44%|████▍     | 89/200 [02:14<02:50,  1.53s/it]Dataset: data-is-better-together/10k_prompts_ranked:  45%|████▌     | 90/200 [02:15<02:48,  1.53s/it]Dataset: data-is-better-together/10k_prompts_ranked:  46%|████▌     | 91/200 [02:16<02:07,  1.17s/it]Dataset: data-is-better-together/10k_prompts_ranked:  46%|████▌     | 92/200 [02:18<02:32,  1.42s/it]Dataset: data-is-better-together/10k_prompts_ranked:  46%|████▋     | 93/200 [02:19<02:41,  1.51s/it]Dataset: data-is-better-together/10k_prompts_ranked:  47%|████▋     | 94/200 [02:21<02:55,  1.65s/it]Dataset: data-is-better-together/10k_prompts_ranked:  48%|████▊     | 95/200 [02:23<02:55,  1.68s/it]Dataset: data-is-better-together/10k_prompts_ranked:  48%|████▊     | 96/200 [02:25<03:16,  1.89s/it]Dataset: data-is-better-together/10k_prompts_ranked:  48%|████▊     | 97/200 [02:27<03:05,  1.80s/it]Dataset: data-is-better-together/10k_prompts_ranked:  49%|████▉     | 98/200 [02:29<03:03,  1.80s/it]Dataset: data-is-better-together/10k_prompts_ranked:  50%|████▉     | 99/200 [02:31<03:03,  1.82s/it]Dataset: data-is-better-together/10k_prompts_ranked:  50%|█████     | 100/200 [02:31<02:11,  1.31s/it]Dataset: data-is-better-together/10k_prompts_ranked:  50%|█████     | 101/200 [02:32<02:11,  1.33s/it]Dataset: data-is-better-together/10k_prompts_ranked:  51%|█████     | 102/200 [02:34<02:27,  1.50s/it]Dataset: data-is-better-together/10k_prompts_ranked:  52%|█████▏    | 103/200 [02:36<02:37,  1.62s/it]Dataset: data-is-better-together/10k_prompts_ranked:  52%|█████▏    | 104/200 [02:37<02:31,  1.58s/it]Token indices sequence length is longer than the specified maximum sequence length for this model (3654 > 2048). Running this sequence through the model will result in indexing errors
Dataset: data-is-better-together/10k_prompts_ranked:  52%|█████▎    | 105/200 [02:38<02:07,  1.34s/it]Dataset: data-is-better-together/10k_prompts_ranked:  53%|█████▎    | 106/200 [02:40<02:09,  1.38s/it]Dataset: data-is-better-together/10k_prompts_ranked:  54%|█████▎    | 107/200 [02:41<02:14,  1.45s/it]Dataset: data-is-better-together/10k_prompts_ranked:  54%|█████▍    | 108/200 [02:43<02:31,  1.65s/it]Dataset: data-is-better-together/10k_prompts_ranked:  55%|█████▍    | 109/200 [02:44<02:04,  1.36s/it]Dataset: data-is-better-together/10k_prompts_ranked:  55%|█████▌    | 110/200 [02:46<02:23,  1.59s/it]Dataset: data-is-better-together/10k_prompts_ranked:  56%|█████▌    | 111/200 [02:48<02:20,  1.58s/it]Dataset: data-is-better-together/10k_prompts_ranked:  56%|█████▌    | 112/200 [02:49<02:09,  1.47s/it]Dataset: data-is-better-together/10k_prompts_ranked:  56%|█████▋    | 113/200 [02:52<02:36,  1.80s/it]Dataset: data-is-better-together/10k_prompts_ranked:  57%|█████▋    | 114/200 [02:52<01:57,  1.37s/it]Dataset: data-is-better-together/10k_prompts_ranked:  57%|█████▊    | 115/200 [02:53<01:36,  1.14s/it]Dataset: data-is-better-together/10k_prompts_ranked:  58%|█████▊    | 116/200 [02:53<01:10,  1.19it/s]Dataset: data-is-better-together/10k_prompts_ranked:  58%|█████▊    | 117/200 [02:53<01:06,  1.25it/s]Dataset: data-is-better-together/10k_prompts_ranked:  59%|█████▉    | 118/200 [02:54<00:58,  1.39it/s]Dataset: data-is-better-together/10k_prompts_ranked:  60%|█████▉    | 119/200 [02:55<01:14,  1.09it/s]Dataset: data-is-better-together/10k_prompts_ranked:  60%|██████    | 120/200 [02:57<01:38,  1.23s/it]Dataset: data-is-better-together/10k_prompts_ranked:  60%|██████    | 121/200 [02:59<01:44,  1.33s/it]Dataset: data-is-better-together/10k_prompts_ranked:  61%|██████    | 122/200 [03:00<01:41,  1.31s/it]Dataset: data-is-better-together/10k_prompts_ranked:  62%|██████▏   | 123/200 [03:02<01:57,  1.53s/it]Dataset: data-is-better-together/10k_prompts_ranked:  62%|██████▏   | 124/200 [03:03<01:38,  1.30s/it]Dataset: data-is-better-together/10k_prompts_ranked:  62%|██████▎   | 125/200 [03:03<01:21,  1.09s/it]Dataset: data-is-better-together/10k_prompts_ranked:  63%|██████▎   | 126/200 [03:04<01:05,  1.14it/s]Dataset: data-is-better-together/10k_prompts_ranked:  64%|██████▎   | 127/200 [03:05<01:18,  1.07s/it]Dataset: data-is-better-together/10k_prompts_ranked:  64%|██████▍   | 128/200 [03:05<00:56,  1.28it/s]Dataset: data-is-better-together/10k_prompts_ranked:  64%|██████▍   | 129/200 [03:07<01:17,  1.10s/it]Dataset: data-is-better-together/10k_prompts_ranked:  65%|██████▌   | 130/200 [03:09<01:30,  1.29s/it]Dataset: data-is-better-together/10k_prompts_ranked:  66%|██████▌   | 131/200 [03:11<01:37,  1.42s/it]Dataset: data-is-better-together/10k_prompts_ranked:  66%|██████▌   | 132/200 [03:12<01:32,  1.36s/it]Dataset: data-is-better-together/10k_prompts_ranked:  66%|██████▋   | 133/200 [03:13<01:22,  1.23s/it]Dataset: data-is-better-together/10k_prompts_ranked:  67%|██████▋   | 134/200 [03:13<01:04,  1.02it/s]Dataset: data-is-better-together/10k_prompts_ranked:  68%|██████▊   | 135/200 [03:14<00:51,  1.27it/s]Dataset: data-is-better-together/10k_prompts_ranked:  68%|██████▊   | 136/200 [03:14<00:38,  1.66it/s]Dataset: data-is-better-together/10k_prompts_ranked:  68%|██████▊   | 137/200 [03:15<00:48,  1.29it/s]Dataset: data-is-better-together/10k_prompts_ranked:  69%|██████▉   | 138/200 [03:17<01:10,  1.13s/it]Dataset: data-is-better-together/10k_prompts_ranked:  70%|██████▉   | 139/200 [03:19<01:27,  1.43s/it]Dataset: data-is-better-together/10k_prompts_ranked:  70%|███████   | 140/200 [03:21<01:36,  1.62s/it]Dataset: data-is-better-together/10k_prompts_ranked:  70%|███████   | 141/200 [03:22<01:30,  1.54s/it]Dataset: data-is-better-together/10k_prompts_ranked:  71%|███████   | 142/200 [03:24<01:35,  1.64s/it]Dataset: data-is-better-together/10k_prompts_ranked:  72%|███████▏  | 143/200 [03:25<01:18,  1.38s/it]Dataset: data-is-better-together/10k_prompts_ranked:  72%|███████▏  | 144/200 [03:25<00:57,  1.03s/it]Dataset: data-is-better-together/10k_prompts_ranked:  72%|███████▎  | 145/200 [03:27<01:05,  1.19s/it]Dataset: data-is-better-together/10k_prompts_ranked:  73%|███████▎  | 146/200 [03:27<00:48,  1.12it/s]Dataset: data-is-better-together/10k_prompts_ranked:  74%|███████▎  | 147/200 [03:29<01:06,  1.25s/it]Dataset: data-is-better-together/10k_prompts_ranked:  74%|███████▍  | 148/200 [03:31<01:12,  1.39s/it]Dataset: data-is-better-together/10k_prompts_ranked:  74%|███████▍  | 149/200 [03:33<01:15,  1.48s/it]Dataset: data-is-better-together/10k_prompts_ranked:  75%|███████▌  | 150/200 [03:33<01:00,  1.20s/it]Dataset: data-is-better-together/10k_prompts_ranked:  76%|███████▌  | 151/200 [03:34<00:58,  1.19s/it]Dataset: data-is-better-together/10k_prompts_ranked:  76%|███████▌  | 152/200 [03:36<01:02,  1.29s/it]Dataset: data-is-better-together/10k_prompts_ranked:  76%|███████▋  | 153/200 [03:37<00:54,  1.17s/it]Dataset: data-is-better-together/10k_prompts_ranked:  77%|███████▋  | 154/200 [03:39<01:06,  1.45s/it]Dataset: data-is-better-together/10k_prompts_ranked:  78%|███████▊  | 155/200 [03:39<00:47,  1.05s/it]Dataset: data-is-better-together/10k_prompts_ranked:  78%|███████▊  | 156/200 [03:41<01:01,  1.39s/it]Dataset: data-is-better-together/10k_prompts_ranked:  78%|███████▊  | 157/200 [03:43<01:01,  1.44s/it]Dataset: data-is-better-together/10k_prompts_ranked:  79%|███████▉  | 158/200 [03:44<01:03,  1.52s/it]Dataset: data-is-better-together/10k_prompts_ranked:  80%|███████▉  | 159/200 [03:45<00:54,  1.33s/it]Dataset: data-is-better-together/10k_prompts_ranked:  80%|████████  | 160/200 [03:47<00:56,  1.41s/it]Dataset: data-is-better-together/10k_prompts_ranked:  80%|████████  | 161/200 [03:48<00:51,  1.32s/it]Dataset: data-is-better-together/10k_prompts_ranked:  81%|████████  | 162/200 [03:50<00:54,  1.43s/it]Dataset: data-is-better-together/10k_prompts_ranked:  82%|████████▏ | 163/200 [03:50<00:43,  1.17s/it]Dataset: data-is-better-together/10k_prompts_ranked:  82%|████████▏ | 164/200 [03:52<00:49,  1.36s/it]Dataset: data-is-better-together/10k_prompts_ranked:  82%|████████▎ | 165/200 [03:54<00:52,  1.49s/it]Dataset: data-is-better-together/10k_prompts_ranked:  83%|████████▎ | 166/200 [03:56<00:53,  1.57s/it]Dataset: data-is-better-together/10k_prompts_ranked:  84%|████████▎ | 167/200 [03:58<00:58,  1.78s/it]Dataset: data-is-better-together/10k_prompts_ranked:  84%|████████▍ | 168/200 [04:00<00:57,  1.79s/it]Dataset: data-is-better-together/10k_prompts_ranked:  84%|████████▍ | 169/200 [04:01<00:55,  1.78s/it]Dataset: data-is-better-together/10k_prompts_ranked:  85%|████████▌ | 170/200 [04:03<00:48,  1.63s/it]Dataset: data-is-better-together/10k_prompts_ranked:  86%|████████▌ | 171/200 [04:05<00:52,  1.79s/it]Dataset: data-is-better-together/10k_prompts_ranked:  86%|████████▌ | 172/200 [04:07<00:48,  1.74s/it]Dataset: data-is-better-together/10k_prompts_ranked:  86%|████████▋ | 173/200 [04:08<00:47,  1.78s/it]Dataset: data-is-better-together/10k_prompts_ranked:  87%|████████▋ | 174/200 [04:11<00:50,  1.93s/it]Dataset: data-is-better-together/10k_prompts_ranked:  88%|████████▊ | 175/200 [04:12<00:47,  1.90s/it]Dataset: data-is-better-together/10k_prompts_ranked:  88%|████████▊ | 176/200 [04:15<00:49,  2.07s/it]Dataset: data-is-better-together/10k_prompts_ranked:  88%|████████▊ | 177/200 [04:17<00:48,  2.13s/it]Dataset: data-is-better-together/10k_prompts_ranked:  89%|████████▉ | 178/200 [04:19<00:45,  2.08s/it]Dataset: data-is-better-together/10k_prompts_ranked:  90%|████████▉ | 179/200 [04:21<00:44,  2.13s/it]Dataset: data-is-better-together/10k_prompts_ranked:  90%|█████████ | 180/200 [04:22<00:35,  1.76s/it]Dataset: data-is-better-together/10k_prompts_ranked:  90%|█████████ | 181/200 [04:23<00:27,  1.45s/it]Dataset: data-is-better-together/10k_prompts_ranked:  91%|█████████ | 182/200 [04:24<00:24,  1.34s/it]Dataset: data-is-better-together/10k_prompts_ranked:  92%|█████████▏| 183/200 [04:25<00:20,  1.19s/it]Dataset: data-is-better-together/10k_prompts_ranked:  92%|█████████▏| 184/200 [04:27<00:20,  1.29s/it]Dataset: data-is-better-together/10k_prompts_ranked:  92%|█████████▎| 185/200 [04:28<00:20,  1.40s/it]Dataset: data-is-better-together/10k_prompts_ranked:  93%|█████████▎| 186/200 [04:30<00:20,  1.43s/it]Average accept_length over 55 steps: 3.7636
Average accept_length over 61 steps: 3.2131
Average accept_length over 84 steps: 2.0714
Average accept_length over 65 steps: 3.0000
Average accept_length over 10 steps: 4.1000
Average accept_length over 70 steps: 2.6714
Average accept_length over 50 steps: 4.2000
Average accept_length over 24 steps: 4.1250
Average accept_length over 52 steps: 4.0000
Average accept_length over 34 steps: 6.7353
Average accept_length over 65 steps: 2.9538
Average accept_length over 15 steps: 1.5333
Average accept_length over 55 steps: 2.1818
Average accept_length over 42 steps: 5.1429
Average accept_length over 47 steps: 4.6170
Average accept_length over 68 steps: 2.8235
Average accept_length over 51 steps: 4.0392
Average accept_length over 28 steps: 3.9643
Average accept_length over 43 steps: 2.7907
Average accept_length over 20 steps: 3.7500
Average accept_length over 73 steps: 2.5342
Average accept_length over 49 steps: 4.3265
Average accept_length over 53 steps: 3.9057
Average accept_length over 70 steps: 2.6714
Average accept_length over 43 steps: 4.3256
Average accept_length over 51 steps: 4.0392
Average accept_length over 47 steps: 4.5106
Average accept_length over 58 steps: 3.4483
Average accept_length over 63 steps: 3.1587
Average accept_length over 31 steps: 3.7419
Average accept_length over 49 steps: 3.3673
Average accept_length over 70 steps: 2.6714
Average accept_length over 48 steps: 4.4167
Average accept_length over 42 steps: 5.1190
Average accept_length over 35 steps: 6.4571
Average accept_length over 54 steps: 3.7593
Average accept_length over 45 steps: 4.8000
Average accept_length over 51 steps: 4.0784
Average accept_length over 37 steps: 1.0541
Average accept_length over 55 steps: 3.7455
Average accept_length over 22 steps: 2.8636
Average accept_length over 68 steps: 2.7794
Average accept_length over 33 steps: 2.5758
Average accept_length over 63 steps: 3.1587
Average accept_length over 42 steps: 5.1190
Average accept_length over 28 steps: 4.1071
Average accept_length over 16 steps: 3.0625
Average accept_length over 8 steps: 4.2500
Average accept_length over 42 steps: 4.6667
Average accept_length over 49 steps: 4.2449
Average accept_length over 62 steps: 3.2581
Average accept_length over 39 steps: 5.5897
Average accept_length over 28 steps: 3.4643
Average accept_length over 18 steps: 3.7222
Average accept_length over 7 steps: 2.0000
Average accept_length over 24 steps: 4.1667
Average accept_length over 54 steps: 3.0556
Average accept_length over 2 steps: 1.0000
Average accept_length over 62 steps: 3.1613
Average accept_length over 83 steps: 2.1687
Average accept_length over 26 steps: 5.6154
Average accept_length over 78 steps: 2.3077
Average accept_length over 68 steps: 2.8088
Average accept_length over 23 steps: 4.8261
Average accept_length over 60 steps: 3.3500
Average accept_length over 56 steps: 2.7857
Average accept_length over 47 steps: 4.4681
Average accept_length over 38 steps: 5.9737
Average accept_length over 7 steps: 5.5714
Average accept_length over 8 steps: 3.8750
Average accept_length over 6 steps: 4.0000
Average accept_length over 49 steps: 4.2653
Average accept_length over 48 steps: 3.7917
Average accept_length over 54 steps: 3.7963
Average accept_length over 57 steps: 3.5965
Average accept_length over 42 steps: 5.1429
Average accept_length over 57 steps: 3.5614
Average accept_length over 25 steps: 2.8000
Average accept_length over 66 steps: 2.9242
Average accept_length over 51 steps: 4.0588
Average accept_length over 57 steps: 3.5439
Average accept_length over 61 steps: 2.6393
Average accept_length over 20 steps: 3.5000
Average accept_length over 56 steps: 3.6429
Average accept_length over 54 steps: 3.7593
Average accept_length over 44 steps: 4.8636
Average accept_length over 55 steps: 3.6909
Average accept_length over 23 steps: 4.6087
Average accept_length over 54 steps: 3.7593
Average accept_length over 46 steps: 4.6087
Average accept_length over 9 steps: 4.8889
Average accept_length over 60 steps: 3.0167
Average accept_length over 52 steps: 3.9615
Average accept_length over 60 steps: 3.3500
Average accept_length over 52 steps: 3.9423
Average accept_length over 72 steps: 2.5694
Average accept_length over 49 steps: 3.1224
Average accept_length over 54 steps: 3.8519
Average accept_length over 56 steps: 3.6071
Average accept_length over 3 steps: 3.0000
Average accept_length over 41 steps: 5.3902
Average accept_length over 57 steps: 3.5263
Average accept_length over 57 steps: 2.8246
Average accept_length over 43 steps: 4.9767
Average accept_length over 1 steps: 0.0000
Average accept_length over 43 steps: 5.0465
Average accept_length over 45 steps: 4.7111
Average accept_length over 63 steps: 3.1111
Average accept_length over 20 steps: 4.0000
Average accept_length over 63 steps: 3.1270
Average accept_length over 46 steps: 4.7391
Average accept_length over 35 steps: 5.5714
Average accept_length over 78 steps: 2.3333
Average accept_length over 10 steps: 6.1000
Average accept_length over 18 steps: 2.1111
Average accept_length over 3 steps: 6.3333
Average accept_length over 20 steps: 3.4000
Average accept_length over 14 steps: 4.2143
Average accept_length over 41 steps: 5.2927
Average accept_length over 58 steps: 3.4655
Average accept_length over 45 steps: 4.8667
Average accept_length over 36 steps: 4.7778
Average accept_length over 61 steps: 3.2623
Average accept_length over 22 steps: 3.7727
Average accept_length over 17 steps: 2.7647
Average accept_length over 11 steps: 5.4545
Average accept_length over 45 steps: 4.7111
Average accept_length over 2 steps: 6.0000
Average accept_length over 55 steps: 3.7273
Average accept_length over 51 steps: 3.7451
Average accept_length over 51 steps: 4.0980
Average accept_length over 37 steps: 4.4595
Average accept_length over 27 steps: 3.0741
Average accept_length over 11 steps: 3.5455
Average accept_length over 9 steps: 3.1111
Average accept_length over 4 steps: 5.2500
Average accept_length over 35 steps: 4.0571
Average accept_length over 59 steps: 3.3559
Average accept_length over 64 steps: 3.0156
Average accept_length over 61 steps: 3.1639
Average accept_length over 39 steps: 5.6667
Average accept_length over 55 steps: 3.8000
Average accept_length over 23 steps: 3.8696
Average accept_length over 5 steps: 3.2000
Average accept_length over 47 steps: 4.4894
Average accept_length over 5 steps: 5.8000
Average accept_length over 62 steps: 3.1452
Average accept_length over 51 steps: 4.0784
Average accept_length over 51 steps: 4.1961
Average accept_length over 15 steps: 3.0000
Average accept_length over 34 steps: 4.6176
Average accept_length over 46 steps: 4.6739
Average accept_length over 26 steps: 3.4231
Average accept_length over 60 steps: 3.3333
Average accept_length over 3 steps: 3.6667
Average accept_length over 64 steps: 3.0312
Average accept_length over 45 steps: 4.8444
Average accept_length over 50 steps: 4.2000
Average accept_length over 26 steps: 6.1923
Average accept_length over 47 steps: 4.5957
Average accept_length over 33 steps: 3.2424
Average accept_length over 49 steps: 4.2857
Average accept_length over 10 steps: 4.4000
Average accept_length over 55 steps: 3.5091
Average accept_length over 53 steps: 3.8491
Average accept_length over 53 steps: 3.8679
Average accept_length over 68 steps: 2.7941
Average accept_length over 54 steps: 3.8148
Average accept_length over 53 steps: 3.8679
Average accept_length over 26 steps: 3.6154
Average accept_length over 66 steps: 2.9091
Average accept_length over 47 steps: 4.5532
Average accept_length over 52 steps: 3.9808
Average accept_length over 63 steps: 2.8095
Average accept_length over 52 steps: 3.9615
Average accept_length over 69 steps: 2.7246
Average accept_length over 63 steps: 3.1111
Average accept_length over 55 steps: 3.7273
Average accept_length over 66 steps: 2.9697
Average accept_length over 26 steps: 3.9615
Average accept_length over 20 steps: 4.8500
Average accept_length over 32 steps: 6.1250
Average accept_length over 25 steps: 2.5600
Average accept_length over 47 steps: 2.0426
Average accept_length over 50 steps: 4.3000
Average accept_length over 45 steps: 4.8000
Dataset: data-is-better-together/10k_prompts_ranked:  94%|█████████▎| 187/200 [04:31<00:18,  1.42s/it]Dataset: data-is-better-together/10k_prompts_ranked:  94%|█████████▍| 188/200 [04:32<00:14,  1.23s/it]Dataset: data-is-better-together/10k_prompts_ranked:  94%|█████████▍| 189/200 [04:33<00:13,  1.23s/it]Dataset: data-is-better-together/10k_prompts_ranked:  95%|█████████▌| 190/200 [04:34<00:12,  1.27s/it]Dataset: data-is-better-together/10k_prompts_ranked:  96%|█████████▌| 191/200 [04:36<00:12,  1.39s/it]Dataset: data-is-better-together/10k_prompts_ranked:  96%|█████████▌| 192/200 [04:37<00:09,  1.14s/it]Dataset: data-is-better-together/10k_prompts_ranked:  96%|█████████▋| 193/200 [04:38<00:07,  1.11s/it]Dataset: data-is-better-together/10k_prompts_ranked:  97%|█████████▋| 194/200 [04:39<00:07,  1.30s/it]Dataset: data-is-better-together/10k_prompts_ranked:  98%|█████████▊| 195/200 [04:41<00:06,  1.39s/it]Dataset: data-is-better-together/10k_prompts_ranked:  98%|█████████▊| 196/200 [04:41<00:04,  1.08s/it]Dataset: data-is-better-together/10k_prompts_ranked:  98%|█████████▊| 197/200 [04:43<00:03,  1.23s/it]Dataset: data-is-better-together/10k_prompts_ranked:  99%|█████████▉| 198/200 [04:45<00:02,  1.45s/it]Dataset: data-is-better-together/10k_prompts_ranked: 100%|█████████▉| 199/200 [04:47<00:01,  1.51s/it]Dataset: data-is-better-together/10k_prompts_ranked: 100%|██████████| 200/200 [04:48<00:00,  1.54s/it]Dataset: data-is-better-together/10k_prompts_ranked: 100%|██████████| 200/200 [04:48<00:00,  1.44s/it]
Average accept_length over 42 steps: 5.1429
Average accept_length over 24 steps: 1.8333
Average accept_length over 37 steps: 4.0000
Average accept_length over 41 steps: 5.4146
Average accept_length over 50 steps: 4.2200
Average accept_length over 14 steps: 3.2857
Average accept_length over 29 steps: 3.4828
Average accept_length over 52 steps: 3.9808
Average accept_length over 48 steps: 4.3542
Average accept_length over 10 steps: 4.6000
Average accept_length over 47 steps: 4.4894
Average accept_length over 59 steps: 3.4068
Average accept_length over 49 steps: 4.3469
Average accept_length over 48 steps: 4.3958
🔄 Completions saved to /home/ubuntu/sd/HandEval/outputs/vicuna-13b-v1.3/data-is-better-together/10k_prompts_ranked_completions.jsonl

✅  Results saved to /home/ubuntu/sd/HandEval/outputs/vicuna-13b-v1.3/data-is-better-together/10k_prompts_ranked_metrics.json
{
  "num_samples": 200,
  "total_time_sec": 288.7211961746216,
  "avg_time_per_sample_sec": 1.4436059808731079,
  "samples_file": "outputs/vicuna-13b-v1.3/data-is-better-together/10k_prompts_ranked_completions.jsonl"
}
